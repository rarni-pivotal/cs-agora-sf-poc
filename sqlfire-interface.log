
[info 2014/01/10 09:12:00.316 EST  <main> tid=0x1] 
  ---------------------------------------------------------------------------
  
    Copyright (C) 1997-2013 VMware, Inc. All rights reserved. This product is
    protected by U.S. and international copyright and intellectual property
    laws. VMware products are covered by one or more patents listed at
    http://www.vmware.com/go/patents.  VMware is a registered trademark or
    trademark of VMware, Inc. in the United States and/or other jurisdictions.
    All other marks and names mentioned herein may be trademarks of their
    respective companies.
  
  ---------------------------------------------------------------------------
  Java version:   1.1.1 build 42624 08/05/2013 10:14:33 PDT javac 1.6.0_26
  Native version: native code unavailable
  Source revision: 42624
  Source repository: gemfire/branches/sqlfire110X_maint
  Running on: usxxmartef3m1.corp.emc.com/192.168.1.6, 8 cpu(s), x86_64 Mac OS X 10.8.5
  Process ID: 53766
  User: martef3
  Current dir: /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap
  Home dir: /Users/martef3
  Class Path:
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/bin
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/antlr.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/asg.cliche-110413.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/commons-cli.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/commons-logging.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/commons-modeler-2.0.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/jline.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/jna.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/log4j.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/mail.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/mx4j-remote.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/mx4j-tools.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/mx4j.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/sqlfire.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/sqlfireclient.jar
    /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/lib/sqlfiretools.jar
  Library Path:
    .
    /Library/Java/Extensions
    /System/Library/Java/Extensions
    /usr/lib/java
  System Properties:
      awt.nativeDoubleBuffering = true
      awt.toolkit = apple.awt.CToolkit
      file.encoding = MacRoman
      file.encoding.pkg = sun.io
      file.separator = /
      ftp.nonProxyHosts = local|*.local|169.254/16|*.169.254/16
      gemfire.append-log = true
      gopherProxySet = false
      http.nonProxyHosts = local|*.local|169.254/16|*.169.254/16
      java.awt.graphicsenv = apple.awt.CGraphicsEnvironment
      java.awt.printerjob = apple.awt.CPrinterJob
      java.class.version = 50.0
      java.endorsed.dirs = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/endorsed
      java.ext.dirs = /Library/Java/Extensions:/System/Library/Java/Extensions:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext
      java.home = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
      java.io.tmpdir = /var/folders/hg/04r9bwnn109_lz6czvth5yw01w0l15/T/
      java.runtime.name = Java(TM) SE Runtime Environment
      java.runtime.version = 1.6.0_51-b11-457-11M4509
      java.specification.name = Java Platform API Specification
      java.specification.vendor = Sun Microsystems Inc.
      java.specification.version = 1.6
      java.vendor = Apple Inc.
      java.vendor.url = http://www.apple.com/
      java.vendor.url.bug = http://bugreport.apple.com/
      java.version = 1.6.0_51
      java.vm.info = mixed mode
      java.vm.name = Java HotSpot(TM) 64-Bit Server VM
      java.vm.specification.name = Java Virtual Machine Specification
      java.vm.specification.vendor = Sun Microsystems Inc.
      java.vm.specification.version = 1.0
      java.vm.vendor = Apple Inc.
      java.vm.version = 20.51-b01-457
      line.separator = 
  
      mrj.build = 11M4509
      mrj.version = 1070.1.6.0_51-457
      os.version = 10.8.5
      p2p.useSSL = false
      path.separator = :
      socksNonProxyHosts = local|*.local|169.254/16|*.169.254/16
      sqlfire.log-file = sqlfire-interface.log
      sun.arch.data.model = 64
      sun.boot.class.path = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar
      sun.boot.library.path = /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries
      sun.cpu.endian = little
      sun.cpu.isalist = 
      sun.io.unicode.encoding = UnicodeLittle
      sun.java.command = SFBootstrapper
      sun.java.launcher = SUN_STANDARD
      sun.jnu.encoding = MacRoman
      sun.management.compiler = HotSpot 64-Bit Tiered Compilers
      sun.nio.ch.bugLevel = 
      sun.os.patch.level = unknown
      user.country = US
      user.language = en
      user.timezone = America/New_York
  ---------------------------------------------------------------------------
  

[config 2014/01/10 09:12:00.329 EST  <main> tid=0x1] Startup Configuration:
   ### GemFire Properties defined with api ###
  locators=192.168.27.137[56788]
  log-file=sqlfire-interface.log
  mcast-port=0
  statistic-archive-file=pivhdsne-stst.sfs
  statistic-sampling-enabled=true
  ### GemFire Properties using default values ###
  ack-severe-alert-threshold=0
  ack-wait-threshold=15
  archive-disk-space-limit=0
  archive-file-size-limit=0
  async-distribution-timeout=0
  async-max-queue-size=8
  async-queue-timeout=60000
  bind-address=
  cache-xml-file=cache.xml
  conflate-events=server
  conserve-sockets=true
  delta-propagation=true
  deploy-working-dir=/Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap
  disable-tcp=false
  distributed-system-id=-1
  durable-client-id=
  durable-client-timeout=300
  enable-network-partition-detection=false
  enable-time-statistics=false
  enforce-unique-host=false
  groups=
  jmx-manager=false
  jmx-manager-access-file=
  jmx-manager-bind-address=
  jmx-manager-hostname-for-clients=
  jmx-manager-http-port=8080
  jmx-manager-password-file=
  jmx-manager-port=1099
  jmx-manager-ssl=false
  jmx-manager-start=false
  jmx-manager-update-rate=2000
  license-application-cache=
  license-data-management=
  license-server-timeout=10000
  license-working-dir=
  log-disk-space-limit=0
  log-file-size-limit=0
  log-level=config
  max-num-reconnect-tries=3
  max-wait-time-reconnect=10000
  mcast-address=239.192.81.1
  mcast-flow-control=1048576, 0.25, 5000
  mcast-recv-buffer-size=1048576
  mcast-send-buffer-size=65535
  mcast-ttl=32
  member-timeout=5000
  membership-port-range=1024-65535
  memcached-port=0
  memcached-protocol=ASCII
  name=
  redundancy-zone=
  remote-locators=
  remove-unresponsive-client=false
  roles=
  security-=
  security-client-accessor=
  security-client-accessor-pp=
  security-client-auth-init=
  security-client-authenticator=
  security-client-dhalgo=
  security-log-file=
  security-log-level=config
  security-peer-auth-init=
  security-peer-authenticator=
  security-peer-verifymember-timeout=1000
  server-bind-address=
  socket-buffer-size=32768
  socket-lease-time=60000
  ssl-ciphers=any
  ssl-enabled=false
  ssl-protocols=any
  ssl-require-authentication=true
  start-locator=
  statistic-sample-rate=1000
  tcp-port=0
  udp-fragment-size=60000
  udp-recv-buffer-size=1048576
  udp-send-buffer-size=65535
  writable-working-dir=
  

[info 2014/01/10 09:12:00.334 EST  <main> tid=0x1] Defaulting license-working-dir to current working directory "/Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap".

[info 2014/01/10 09:12:00.337 EST  <main> tid=0x1] Acquiring default evaluation license.

[info 2014/01/10 09:12:01.667 EST  <main> tid=0x1] vFabric Licensing Client activation of license required 1330 milliseconds.

[info 2014/01/10 09:12:01.711 EST  <main> tid=0x1] Using the default evaluation license.

[info 2014/01/10 09:12:01.711 EST  <main> tid=0x1] Licensing required 1377 milliseconds.

[info 2014/01/10 09:12:01.764 EST  <main> tid=0x1] GemFire P2P Listener started on  tcp:///192.168.1.6:62094

[info 2014/01/10 09:12:01.894 EST  <main> tid=0x1] Attempting to join distributed system whose membership coordinator is 192.168.27.137(3205)<v0>:57873 using membership ID usxxmartef3m1(53766):57209

[info 2014/01/10 09:13:08.906 EST  <main> tid=0x1] Membership: lead member is now usxxmartef3m1(53766):57209

[config 2014/01/10 09:13:08.908 EST  <main> tid=0x1] This member, usxxmartef3m1(53766):57209, is becoming group coordinator.

[info 2014/01/10 09:13:08.910 EST  <main> tid=0x1] Entered into membership in group GF7 with ID usxxmartef3m1(53766):57209.

[info 2014/01/10 09:13:08.911 EST  <main> tid=0x1] Starting DistributionManager usxxmartef3m1(53766):57209. 

[info 2014/01/10 09:13:08.911 EST  <main> tid=0x1] Initial (membershipManager) view =  [usxxmartef3m1(53766):57209{lead}]

[info 2014/01/10 09:13:08.911 EST  <main> tid=0x1] Admitting member <usxxmartef3m1(53766):57209>. Now there are 1 non-admin member(s).

[info 2014/01/10 09:13:08.911 EST  <main> tid=0x1] usxxmartef3m1(53766):57209 is the elder and the only member.

[info 2014/01/10 09:13:08.914 EST  <main> tid=0x1] Did not hear back from any other system. I am the first one.

[info 2014/01/10 09:13:08.915 EST  <main> tid=0x1] DistributionManager usxxmartef3m1(53766):57209 started on 192.168.27.137[56788]. There were 0 other DMs. others: []  

[info 2014/01/10 09:13:08.926 EST  <Thread-12 StatSampler> tid=0x2f] Renamed old existing archive to "pivhdsne-stst-07-01.sfs".

[info 2014/01/10 09:13:08.931 EST  <Thread-12 StatSampler> tid=0x2f] Archiving statistics to "pivhdsne-stst.sfs".

[info 2014/01/10 09:13:09.033 EST  <main> tid=0x1] Initializing region _monitoringRegion_usxxmartef3m1(53766)57209

[info 2014/01/10 09:13:09.074 EST  <main> tid=0x1] Initializing region PdxTypes

[info 2014/01/10 09:13:09.077 EST  <main> tid=0x1] GemFire Cache successfully created.

[info 2014/01/10 09:13:09.091 EST  <main> tid=0x1] SqlfHeapThreshold: Query Cancellation Thread Started with query cancellation interval 100ms

[config 2014/01/10 09:13:09.102 EST  <main> tid=0x1] GemFire Cache successfully booted with 
  --- file properties ---
  --- EMPTY ---
  --- boot connection properties ---
   enable-stats="true"
   locators="192.168.27.137[56788]"
   mcast-port="0"
   sqlfire.access="memstore"
   sqlfire.authentication.required="false"
   sqlfire.database-object="com.vmware.sqlfire.internal.engine.db.FabricDatabase@264d40df"
   sqlfire.engineType="2"
   sqlfire.serviceLocale="en_US"
   sqlfire.serviceProtocol="com.vmware.sqlfire.internal.database.Database"
   statistic-archive-file="pivhdsne-stst.sfs"
   statistic-sampling-enabled="true"
  --- end --
  

[config 2014/01/10 09:13:09.104 EST  <main> tid=0x1] This JVM is setup with SQLFire datastore role.

[info 2014/01/10 09:13:09.122 EST  <main> tid=0x1] Locked disk store SQLF-DEFAULT-DISKSTORE for exclusive access in directory: /Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/.

[info 2014/01/10 09:13:09.137 EST  <main> tid=0x1] Created disk store SQLF-DEFAULT-DISKSTORE with unique id aaee4106-c93f-42e2-9e1a-2a0529060da5

[info 2014/01/10 09:13:09.142 EST  <main> tid=0x1] recovery region initialization took 2 ms

[info 2014/01/10 09:13:09.148 EST  <main> tid=0x1] Locked disk store SQLF-DD-DISKSTORE for exclusive access in directory: ./datadictionary

[info 2014/01/10 09:13:09.148 EST  <main> tid=0x1] Created disk store SQLF-DD-DISKSTORE with unique id 16454a1b-ddd2-4a8a-b2c7-aba1b0d2341c

[info 2014/01/10 09:13:09.149 EST  <main> tid=0x1] recovery region initialization took 0 ms

[info 2014/01/10 09:13:09.176 EST  <main> tid=0x1] Created oplog#1 drf for disk store SQLF-DD-DISKSTORE.

[info 2014/01/10 09:13:09.216 EST  <main> tid=0x1] Created oplog#1 crf for disk store SQLF-DD-DISKSTORE.

[info 2014/01/10 09:13:09.481 EST  <main> tid=0x1] Created oplog#1 drf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2014/01/10 09:13:14.890 EST  <main> tid=0x1] Created oplog#1 crf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2014/01/10 09:13:14.892 EST  <main> tid=0x1] Initializing region _DDL_STMTS_META_REGION

[info 2014/01/10 09:13:14.893 EST  <main> tid=0x1] Region /_DDL_STMTS_META_REGION was created on this member with the persistent id /192.168.1.6:/Users/martef3/Documents/Pivotal/dev/sts_workspace/SFBootStrap/./datadictionary created at timestamp 1389363194891 version 0 diskStoreId 16454a1b-ddd2-4a8a-b2c7-aba1b0d2341c name .

[info 2014/01/10 09:13:14.927 EST  <main> tid=0x1] Initializing region __PR

[info 2014/01/10 09:13:14.948 EST  <main> tid=0x1] Partitioned Region /__IDENTITYREGION2 is born with prId=1 ident:#__IDENTITYREGION2

[info 2014/01/10 09:13:15.300 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,class_name,data_type,remarks,base_type/-2064822571] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CASE WHEN (SCHEMANAME IS NULL) THEN CAST (NULL AS VARCHAR(128)) ELSE SCHEMANAME END AS TYPE_SCHEM, ALIAS AS TYPE_NAME, JAVACLASSNAME AS CLASS_NAME, 2000 AS DATA_TYPE, CAST (NULL AS VARCHAR(128)) AS REMARKS, CAST (NULL AS SMALLINT) AS BASE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE (ALIASTYPE='A') 	AND (SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND ((1=1) OR ? IS NOT NULL) AND (SCHEMANAME LIKE ?) AND (ALIAS LIKE ?) AND (CAST (java.sql.Types::JAVA_OBJECT AS INTEGER) IN (?)) ORDER BY DATA_TYPE, TYPE_SCHEM, TYPE_NAME] schema=SYS

[info 2014/01/10 09:13:15.300 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,class_name,data_type,remarks,base_type/-2064822571

[info 2014/01/10 09:13:15.425 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/1119047940] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, CAST( P.GRANTOR AS VARCHAR(128)) AS GRANTOR, CAST( P.GRANTEE AS VARCHAR(128)) AS GRANTEE, X.PRIV AS PRIVILEGE, X.GRANTABLE AS IS_GRANTABLE FROM SYS.SYSTABLEPERMS P, SYS.SYSTABLES T, SYS.SYSSCHEMAS S, (VALUES (CAST('SELECT' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('SELECT' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('DELETE' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('DELETE' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('INSERT' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('INSERT' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('UPDATE' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('UPDATE' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('REFERENCES' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('REFERENCES' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('TRIGGER' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('TRIGGER' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128)))) AS X(PRIV,GRANTABLE) WHERE P.TABLEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?)  AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ((P.SELECTPRIV = 'y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'NO') OR (P.SELECTPRIV = 'Y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'YES') OR (P.SELECTPRIV = 'y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'NO') OR (P.DELETEPRIV = 'Y' AND X.PRIV = 'DELETE' AND X.GRANTABLE = 'YES') OR (P.DELETEPRIV = 'y' AND X.PRIV = 'DELETE' AND X.GRANTABLE = 'NO') OR (P.INSERTPRIV = 'Y' AND X.PRIV = 'INSERT' AND X.GRANTABLE = 'YES') OR (P.INSERTPRIV = 'y' AND X.PRIV = 'INSERT' AND X.GRANTABLE = 'NO') OR (P.UPDATEPRIV = 'Y' AND X.PRIV = 'UPDATE' AND X.GRANTABLE = 'YES') OR (P.UPDATEPRIV = 'y' AND X.PRIV = 'UPDATE' AND X.GRANTABLE = 'NO') OR (P.REFERENCESPRIV = 'Y' AND X.PRIV = 'REFERENCES' AND X.GRANTABLE = 'YES') OR (P.REFERENCESPRIV = 'y' AND X.PRIV = 'REFERENCES' AND X.GRANTABLE = 'NO') OR (P.TRIGGERPRIV = 'Y' AND X.PRIV = 'TRIGGER' AND X.GRANTABLE = 'YES') OR (P.TRIGGERPRIV = 'y' AND X.PRIV = 'TRIGGER' AND X.GRANTABLE = 'NO')) ORDER BY TABLE_SCHEM, TABLE_NAME, PRIVILEGE] schema=SYS

[info 2014/01/10 09:13:15.425 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/1119047940

[info 2014/01/10 09:13:15.514 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/1609306632] for statement [SELECT JDBC_SUBQUERY.TABLE_CAT AS TABLE_CAT, JDBC_SUBQUERY.TABLE_SCHEM AS TABLE_SCHEM, JDBC_SUBQUERY.TABLE_NAME AS TABLE_NAME, CAST (JDBC_SUBQUERY.NON_UNIQUE AS SMALLINT) AS NON_UNIQUE, JDBC_SUBQUERY.INDEX_QUALIFIER AS INDEX_QUALIFIER, JDBC_SUBQUERY.INDEX_NAME AS INDEX_NAME, CAST (JDBC_SUBQUERY.TYPE AS SMALLINT) AS TYPE, JDBC_SUBQUERY.ORDINAL_POSITION AS ORDINAL_POSITION, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, JDBC_SUBQUERY.ASC_OR_DESC AS ASC_OR_DESC, JDBC_SUBQUERY.CARDINALITY AS CARDINALITY, JDBC_SUBQUERY.PAGES AS PAGES, JDBC_SUBQUERY.FILTER_CONDITION AS FILTER_CONDITION FROM ( SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, (CASE WHEN CONGLOMS.DESCRIPTOR.isUnique() THEN FALSE ELSE TRUE END) AS NON_UNIQUE, CAST ('' AS VARCHAR(128)) AS INDEX_QUALIFIER, CONGLOMS.CONGLOMERATENAME AS INDEX_NAME, java.sql.DatabaseMetaData::tableIndexOther AS TYPE, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS ORDINAL_POSITION, COLS.COLUMNNAME AS COLUMN_NAME, CASE WHEN CONGLOMS.DESCRIPTOR.isAscending( CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER)) THEN 'A' ELSE 'D' END AS ASC_OR_DESC, CAST(NULL AS INT) AS CARDINALITY, CAST(NULL AS INT) AS PAGES, CAST(NULL AS VARCHAR(128)) AS FILTER_CONDITION FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE T.TABLEID = CONGLOMS.TABLEID AND T.TABLEID = COLS.REFERENCEID AND T.SCHEMAID = S.SCHEMAID AND CONGLOMS.ISINDEX AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=?  AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ( CASE WHEN ? THEN CONGLOMS.DESCRIPTOR.isUnique() ELSE (1=1) END) AND ((1=1) OR ?<>0) ) JDBC_SUBQUERY ORDER BY NON_UNIQUE, TYPE, INDEX_NAME, ORDINAL_POSITION] schema=SYS

[info 2014/01/10 09:13:15.514 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/1609306632

[info 2014/01/10 09:13:15.637 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/1757333869] for statement [SELECT JDBC_SUBQUERY.TABLE_CAT AS TABLE_CAT, JDBC_SUBQUERY.TABLE_SCHEM AS TABLE_SCHEM, JDBC_SUBQUERY.TABLE_NAME AS TABLE_NAME, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS SMALLINT) AS DECIMAL_DIGITS, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS SMALLINT) AS NUM_PREC_RADIX, CAST (JDBC_SUBQUERY.NULLABLE AS SMALLINT) AS NULLABLE, JDBC_SUBQUERY.REMARKS AS REMARKS, JDBC_SUBQUERY.COLUMN_DEF AS COLUMN_DEF, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH, JDBC_SUBQUERY.ORDINAL_POSITION AS ORDINAL_POSITION, JDBC_SUBQUERY.IS_NULLABLE AS IS_NULLABLE, JDBC_SUBQUERY.SCOPE_CATLOG AS SCOPE_CATLOG, JDBC_SUBQUERY.SCOPE_SCHEMA AS SCOPE_SCHEMA, JDBC_SUBQUERY.SCOPE_TABLE AS SCOPE_TABLE, JDBC_SUBQUERY.SOURCE_DATA_TYPE AS SOURCE_DATA_TYPE, JDBC_SUBQUERY.IS_AUTOINCREMENT AS IS_AUTOINCREMENT FROM ( SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || (CAST (RTRIM(CAST(AUTOINCREMENTSTART AS CHAR(12))) AS VARCHAR(12))) || ' increment ' || (CAST (RTRIM(CAST(AUTOINCREMENTINC AS CHAR(12))) AS VARCHAR(12))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT, C.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) ) JDBC_SUBQUERY ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION] schema=SYS

[info 2014/01/10 09:13:15.638 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/1757333869

[info 2014/01/10 09:13:16.011 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1294922006] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() )] schema=SYS

[info 2014/01/10 09:13:16.011 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1294922006

[info 2014/01/10 09:13:16.150 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/352652448] for statement [SELECT JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.LITERAL_PREFIX AS LITERAL_PREFIX, JDBC_SUBQUERY.LITERAL_SUFFIX AS LITERAL_SUFFIX, JDBC_SUBQUERY.CREATE_PARAMS AS CREATE_PARAMS, JDBC_SUBQUERY.NULLABLE AS NULLABLE, CAST (JDBC_SUBQUERY.CASE_SENSITIVE AS SMALLINT) AS CASE_SENSITIVE, JDBC_SUBQUERY.SEARCHABLE AS SEARCHABLE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN JDBC_SUBQUERY.UNSIGNED_ATTRIBUTE ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS UNSIGNED_ATTRIBUTE, CAST (JDBC_SUBQUERY.FIXED_PREC_SCALE AS SMALLINT) AS FIXED_PREC_SCALE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN JDBC_SUBQUERY.AUTO_UNIQUE_VAL ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS AUTO_UNIQUE_VAL, JDBC_SUBQUERY.LOCAL_TYPE_NAME AS LOCAL_TYPE_NAME, JDBC_SUBQUERY.MINIMUM_SCALE AS MINIMUM_SCALE, JDBC_SUBQUERY.MAXIMUM_SCALE AS MAXIMUM_SCALE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS NUM_PREC_RADIX, CAST (NULL AS SMALLINT) AS INTERVAL_PRECISION FROM ( SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, T2 AS DATA_TYPE, T3 AS COLUMN_SIZE, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, T8 AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, T10 AS UNSIGNED_ATTRIBUTE, T11 AS FIXED_PREC_SCALE, T12 AS AUTO_UNIQUE_VAL, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (NULL AS INT) AS SQL_DATA_TYPE, CAST (NULL AS INT) AS SQL_DATETIME_SUB, T18 AS NUM_PREC_RADIX FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18) ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:16.150 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/352652448

[info 2014/01/10 09:13:16.212 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/1898671812] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS,  SYS.SYSCOLUMNS COLS  WHERE COLS.REFERENCEID = TABS.TABLEID  AND TABS.SCHEMAID = SCHEMAS.SCHEMAID  AND ((1=1) OR ? IS NOT NULL)  AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ? BETWEEN 0 AND 2  AND (?<>0 OR NOT COLS.COLUMNDATATYPE.isNullable()) ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:16.212 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/1898671812

[info 2014/01/10 09:13:16.234 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type,specific_name/-1082778297] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS RESERVED1, CAST (NULL AS INT) AS RESERVED2, CAST (NULL AS INT) AS RESERVED3, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE, SPECIFICNAME AS SPECIFIC_NAME FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, SPECIFIC_NAME] schema=SYS

[info 2014/01/10 09:13:16.234 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type,specific_name/-1082778297

[info 2014/01/10 09:13:16.263 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,method_id,parameter_id__V/-567768339] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, A.ALIAS AS PROCEDURE_NAME, V."COLUMN_NAME" AS COLUMN_NAME, V."COLUMN_TYPE" AS COLUMN_TYPE, V."DATA_TYPE" AS DATA_TYPE, V."TYPE_NAME" AS TYPE_NAME, V."PRECISION" AS PRECISION, V."LENGTH" AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE" AS NULLABLE, V."REMARKS" AS REMARKS, V."METHOD_ID" AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE ALIASTYPE = 'P' AND SCHEMANAME LIKE ? AND A.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2014/01/10 09:13:16.263 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,method_id,parameter_id__V/-567768339

[info 2014/01/10 09:13:16.430 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_constraintid,numcols__SYS.SYSCONSTRAINTS/68200219] for statement [SELECT CONS.CONSTRAINTID, IDX.DESCRIPTOR.numberOfOrderedColumns() AS NUMCOLS FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES IDX WHERE TABS.TABLEID = conS.TABLEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND IDX.DESCRIPTOR IS NOT NULL AND KEYS.CONGLOMERATEID = IDX.CONGLOMERATEID AND IDX.ISCONSTRAINT AND conS.type = 'U' AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?) AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' ORDER BY NUMCOLS] schema=SYS

[info 2014/01/10 09:13:16.430 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_constraintid,numcols__SYS.SYSCONSTRAINTS/68200219

[info 2014/01/10 09:13:16.445 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-2016242488] for statement [SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE FROM ( VALUES (CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128))) ) AS COLUMNPRIVILEGES ( TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=? OR ''=?)] schema=SYS

[info 2014/01/10 09:13:16.445 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-2016242488

[info 2014/01/10 09:13:16.512 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,precision,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_increment,local_type_name,minimum/1483303549] for statement [SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, T2 AS DATA_TYPE, T3 AS PRECISION, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, T8 AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, T10 AS UNSIGNED_ATTRIBUTE, T11 AS FIXED_PREC_SCALE, T12 AS AUTO_INCREMENT, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (NULL AS INT) AS SQL_DATA_TYPE, CAST (NULL AS INT) AS SQL_DATETIME_SUB, T18 AS NUM_PREC_RADIX FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18)] schema=SYS

[info 2014/01/10 09:13:16.512 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,precision,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_increment,local_type_name,minimum/1483303549

[info 2014/01/10 09:13:16.539 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/-1970896888] for statement [SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE FROM ( VALUES (CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128))) ) AS TABLEPRIVILEGES (TABLE_CAT, TABLE_SCHEM, TABLE_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?) ORDER BY TABLE_SCHEM, TABLE_NAME, PRIVILEGE] schema=SYS

[info 2014/01/10 09:13:16.539 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/-1970896888

[info 2014/01/10 09:13:16.545 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,supertable_name__SYSIBM.SYSDUMMY1/1862709106] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TABLE_CAT, CAST(NULL AS VARCHAR(128)) AS TABLE_SCHEM, VARCHAR('', 128) AS TABLE_NAME, VARCHAR('', 128) AS SUPERTABLE_NAME FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2014/01/10 09:13:16.545 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,supertable_name__SYSIBM.SYSDUMMY1/1862709106

[info 2014/01/10 09:13:16.581 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1186328419] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, S2.SCHEMANAME AS FKTABLE_SCHEM, T2.TABLENAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CAST (CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN F2.UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN F2.DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN F2.DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN F2.DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END)END)ENd)END)  AS SMALLINT) AS DELETE_RULE, C2.CONSTRAINTNAME AS FK_NAME, PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT C.CONSTRAINTID AS PK_ID, CONSTRAINTNAME AS PK_NAME, PKTB_SCHEMA AS PKTABLE_SCHEM,  PKTB_NAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS KEY_SEQ FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T.TABLEID AS PKTB_ID, S.SCHEMANAME AS PKTB_SCHEMA, T.TABLENAME AS PKTB_NAME FROM  SYS.SYSTABLES t --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS s --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=? AND S.SCHEMAID = T.SCHEMAID ) AS PKTB (PKTB_ID, PKTB_SCHEMA, PKTB_NAME), SYS.SYSCONSTRAINTS C --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE  PKTB.PKTB_ID = C.TABLEID AND K.CONSTRAINTID = C.CONSTRAINTID  AND PKTB.PKTB_ID = COLS.REFERENCEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ) AS PKINFO(PK_ID, PK_NAME, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, KEY_SEQ), SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1'  
, SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2'  
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1'  
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE  F2.keyCONSTRAINTID = PKINFO.PK_ID AND PKINFO.KEY_SEQ = CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(  COLS2.COLUMNNUMBER)  AND T2.TABLEID = C2.TABLEID AND ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME LIKE ? AND T2.TABLENAME NOT LIKE 'SYSXPLAIN%' AND S2.SCHEMAID = T2.SCHEMAID  AND F2.CONSTRAINTID = C2.CONSTRAINTID  AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID AND C2.TABLEID = COLS2.REFERENCEID ORDER BY FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FK_NAME, KEY_SEQ] schema=SYS

[info 2014/01/10 09:13:16.581 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1186328419

[info 2014/01/10 09:13:16.605 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-2071265857] for statement [SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM ( VALUES (SMALLINT(1), CAST ('' AS VARCHAR(128)), 1, CAST ('' AS VARCHAR(128)), 1, 1, SMALLINT(1), SMALLINT(1)) ) AS VERSIONCOLUMNS (SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?)] schema=SYS

[info 2014/01/10 09:13:16.605 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-2071265857

[info 2014/01/10 09:13:16.617 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,num_input_params,num_output_params,num_result_sets,remarks,procedure_type/128346607] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS NUM_INPUT_PARAMS, CAST (NULL AS INT) AS NUM_OUTPUT_PARAMS, CAST (NULL AS INT) AS NUM_RESULT_SETS, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY 2,3] schema=SYS

[info 2014/01/10 09:13:16.618 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,num_input_params,num_output_params,num_result_sets,remarks,procedure_type/128346607

[info 2014/01/10 09:13:16.628 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_schem,table_catalog__SYS.SYSSCHEMAS/2115719063] for statement [SELECT SCHEMANAME AS TABLE_SCHEM, CAST(NULL AS VARCHAR(128)) AS TABLE_CATALOG FROM SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND SCHEMANAME LIKE ? ORDER BY TABLE_SCHEM] schema=SYS

[info 2014/01/10 09:13:16.628 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_schem,table_catalog__SYS.SYSSCHEMAS/2115719063

[info 2014/01/10 09:13:16.666 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-910606525] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, S2.SCHEMANAME AS FKTABLE_SCHEM, T2.TABLENAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CAST (CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN F2.UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN F2.DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN F2.DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN F2.DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END)END)ENd)END)  AS SMALLINT) AS DELETE_RULE, C2.CONSTRAINTNAME AS FK_NAME, PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT C.CONSTRAINTID AS PK_ID, CONSTRAINTNAME AS PK_NAME, PKTB_SCHEMA AS PKTABLE_SCHEM,  PKTB_NAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS KEY_SEQ FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T.TABLEID AS PKTB_ID, S.SCHEMANAME AS PKTB_SCHEMA, T.TABLENAME AS PKTB_NAME FROM  SYS.SYSTABLES t --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS s --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME LIKE ? AND S.SCHEMAID = T.SCHEMAID ) AS PKTB (PKTB_ID, PKTB_SCHEMA, PKTB_NAME), SYS.SYSCONSTRAINTS C --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE  PKTB.PKTB_ID = C.TABLEID AND K.CONSTRAINTID = C.CONSTRAINTID  AND PKTB.PKTB_ID = COLS.REFERENCEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ) AS PKINFO(PK_ID, PK_NAME, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, KEY_SEQ), SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1'  
, SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2'  
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1'  
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE  F2.keyCONSTRAINTID = PKINFO.PK_ID AND PKINFO.KEY_SEQ = CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(  COLS2.COLUMNNUMBER)  AND T2.TABLEID = C2.TABLEID AND ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME LIKE ? AND T2.TABLENAME NOT LIKE 'SYSXPLAIN%' AND S2.SCHEMAID = T2.SCHEMAID  AND F2.CONSTRAINTID = C2.CONSTRAINTID  AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID AND C2.TABLEID = COLS2.REFERENCEID ORDER BY FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FK_NAME, KEY_SEQ] schema=SYS

[info 2014/01/10 09:13:16.666 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-910606525

[info 2014/01/10 09:13:16.691 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/685411790] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.BUFFER_LENGTH AS BUFFER_LENGTH, JDBC_SUBQUERY.DECIMAL_DIGITS AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM ( VALUES (SMALLINT(1), CAST ('' AS VARCHAR(128)), 1, CAST ('' AS VARCHAR(128)), 1, 1, SMALLINT(1), SMALLINT(1)) ) AS VERSIONCOLUMNS (SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?) ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:16.692 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/685411790

[info 2014/01/10 09:13:16.720 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_function_cat,function_schem,function_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,char_octet_length,ordinal_position,is_nullable,spec/-1326417381] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS FUNCTION_CAT, S.SCHEMANAME       AS FUNCTION_SCHEM, A.ALIAS            AS FUNCTION_NAME, V."COLUMN_NAME"    AS COLUMN_NAME, V."COLUMN_TYPE"    AS COLUMN_TYPE, V."DATA_TYPE"      AS DATA_TYPE, V."TYPE_NAME"      AS TYPE_NAME, V."PRECISION"      AS PRECISION, V."LENGTH"         AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE"          AS NULLABLE, V."REMARKS"           AS REMARKS, CASE WHEN (V."DATA_TYPE" IN ( java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN V."LENGTH" ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH, CASE WHEN (V."COLUMN_TYPE" = 5) THEN CAST((V."PARAMETER_ID" + 1 - V."METHOD_ID") AS INT) ELSE CAST((V."PARAMETER_ID" + 1) AS INT) END AS ORDINAL_POSITION, CAST(( CASE WHEN V."NULLABLE" = java.sql.DatabaseMetaData::procedureNullable THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, A.SPECIFICNAME        AS SPECIFIC_NAME, V."METHOD_ID"         AS METHOD_ID, V."PARAMETER_ID"      AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS S, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE A.ALIASTYPE = 'F' AND S.SCHEMANAME LIKE ? AND A.SCHEMAID = S.SCHEMAID AND A.ALIAS LIKE ? AND (V."COLUMN_NAME" LIKE ?) ORDER BY FUNCTION_SCHEM, FUNCTION_NAME, SPECIFIC_NAME, PARAMETER_ID, ORDINAL_POSITION] schema=SYS

[info 2014/01/10 09:13:16.720 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_function_cat,function_schem,function_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,char_octet_length,ordinal_position,is_nullable,spec/-1326417381

[info 2014/01/10 09:13:16.736 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,attr_name,data_type,attr_type_name,attr_size,decimal_digits,num_prec_radix,nullable,remarks,attr_def,sql_data_type,sql_datetime_sub,char_octet_length,ord/1945291601] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TYPE_CAT, CAST(NULL AS VARCHAR(128)) AS TYPE_SCHEM, VARCHAR('', 128) AS TYPE_NAME, CAST(NULL AS VARCHAR(128)) AS ATTR_NAME, CAST(NULL AS INT) AS DATA_TYPE, CAST(NULL AS VARCHAR(128)) AS ATTR_TYPE_NAME, CAST(NULL AS INT) AS ATTR_SIZE, CAST(NULL AS INT) AS DECIMAL_DIGITS, CAST(NULL AS INT) AS NUM_PREC_RADIX, CAST(NULL AS INT) AS NULLABLE, CAST(NULL AS VARCHAR(128)) AS REMARKS, CAST(NULL AS VARCHAR(128)) AS ATTR_DEF, CAST(NULL AS INT) AS SQL_DATA_TYPE, CAST(NULL AS INT) AS SQL_DATETIME_SUB, CAST(NULL AS INT) AS CHAR_OCTET_LENGTH, CAST(NULL AS INT) AS ORDINAL_POSITION, CAST(NULL AS VARCHAR(128)) AS IS_NULLABLE, CAST(NULL AS VARCHAR(128)) AS SCOPE_CATALOG, CAST(NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST(NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST(NULL AS SMALLINT) AS SOURCE_DATA_TYPE FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2014/01/10 09:13:16.736 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,attr_name,data_type,attr_type_name,attr_size,decimal_digits,num_prec_radix,nullable,remarks,attr_def,sql_data_type,sql_datetime_sub,char_octet_length,ord/1945291601

[info 2014/01/10 09:13:16.746 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_function_cat,function_schem,function_name,remarks,function_type,specific_name/-1921152528] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS FUNCTION_CAT, SYS.SYSSCHEMAS.SCHEMANAME AS FUNCTION_SCHEM, SYS.SYSALIASES.ALIAS AS FUNCTION_NAME, CAST ((SYS.SYSALIASES.JAVACLASSNAME || '.' || SYS.SYSALIASES.ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CASE WHEN (SYS.SYSALIASES.ALIASINFO->isTableFunction())THEN CAST (2 AS SMALLINT)ELSE CAST (1 AS SMALLINT) END AS FUNCTION_TYPE, SYS.SYSALIASES.SPECIFICNAME AS SPECIFIC_NAME FROM SYS.SYSSCHEMAS, SYS.SYSALIASES WHERE SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND SYS.SYSALIASES.ALIASTYPE = 'F' AND ((1=1) OR ? IS NOT NULL) AND SYS.SYSSCHEMAS.SCHEMANAME LIKE ? AND SYS.SYSALIASES.ALIAS LIKE ? ORDER BY FUNCTION_SCHEM, FUNCTION_NAME, SPECIFIC_NAME] schema=SYS

[info 2014/01/10 09:13:16.746 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_function_cat,function_schem,function_name,remarks,function_type,specific_name/-1921152528

[info 2014/01/10 09:13:16.766 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,table_type,remarks,type_cat,type_schem,type_name,self_referencing_col_name,ref_generation/469368088] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, SCHEMANAME AS TABLE_SCHEM,  TABLENAME AS TABLE_NAME, (CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) AS TABLE_TYPE, CAST ('' AS VARCHAR(128)) AS REMARKS, CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, CAST (NULL AS VARCHAR(128)) AS REF_GENERATION FROM SYS.SYSTABLES, SYS.SYSSCHEMAS, (VALUES ('T','TABLE'), ('S','SYSTEM TABLE'), ('V', 'VIEW'), ('A', 'SYNONYM')) T(TTABBREV,TABLE_TYPE) WHERE (TTABBREV=TABLETYPE 	AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) AND (TABLENAME LIKE ?) AND (TABLENAME NOT LIKE 'SYSXPLAIN%') AND TABLETYPE IN (?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME] schema=SYS

[info 2014/01/10 09:13:16.767 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,table_type,remarks,type_cat,type_schem,type_name,self_referencing_col_name,ref_generation/469368088

[info 2014/01/10 09:13:16.778 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_name,max_len,default_value,description__SYSIBM.SYSDUMMY1/587800618] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS NAME, CAST(NULL AS INT) AS MAX_LEN, CAST(NULL AS VARCHAR(128)) AS DEFAULT_VALUE, CAST(NULL AS VARCHAR(128)) AS DESCRIPTION FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2014/01/10 09:13:16.778 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_name,max_len,default_value,description__SYSIBM.SYSDUMMY1/587800618

[info 2014/01/10 09:13:16.793 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-1978440259] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS,  SYS.SYSCOLUMNS COLS  WHERE COLS.REFERENCEID = TABS.TABLEID  AND TABS.SCHEMAID = SCHEMAS.SCHEMAID  AND ((1=1) OR ? IS NOT NULL)  AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ? BETWEEN 0 AND 2  AND (?<>0 OR NOT COLS.COLUMNDATATYPE.isNullable())] schema=SYS

[info 2014/01/10 09:13:16.793 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-1978440259

[info 2014/01/10 09:13:16.836 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,char_o/-460808413] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, S.SCHEMANAME                AS PROCEDURE_SCHEM, A.ALIAS                     AS PROCEDURE_NAME, V."COLUMN_NAME"             AS COLUMN_NAME, V."COLUMN_TYPE"             AS COLUMN_TYPE, V."DATA_TYPE"               AS DATA_TYPE, V."TYPE_NAME"               AS TYPE_NAME, V."PRECISION"               AS PRECISION, V."LENGTH"                  AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE"                AS NULLABLE, V."REMARKS"                 AS REMARKS, CAST (NULL AS VARCHAR(254)) AS COLUMN_DEF, CAST (NULL AS INTEGER)      AS SQL_DATA_TYPE, CAST (NULL AS INTEGER)      AS SQL_DATETIME_SUB, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN V."LENGTH" ELSE CAST (NULL AS INTEGER) END AS CHAR_OCTET_LENGTH, CAST ((V."PARAMETER_ID" + 1) AS INT) AS ORDINAL_POSITION, CAST ((CASE WHEN (V."NULLABLE" IN (java.sql.DatabaseMetaData::procedureNullable)) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, A.SPECIFICNAME   AS SPECIFIC_NAME, V."METHOD_ID"    AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS S, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE A.ALIASTYPE = 'P' AND S.SCHEMANAME LIKE ? AND A.SCHEMAID = S.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, SPECIFIC_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2014/01/10 09:13:16.836 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,char_o/-460808413

[info 2014/01/10 09:13:16.848 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-587243770] for statement [SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM (VALUES (CAST (2  AS SMALLINT), CAST ('' AS VARCHAR(128)), 0, CAST ('INT' AS VARCHAR(128)), 0, 0,	CAST (0 AS SMALLINT), CAST (0 AS SMALLINT)) ) AS BESTROWIDENTIFIER( SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN) WHERE (1=0)] schema=SYS

[info 2014/01/10 09:13:16.848 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-587243770

[info 2014/01/10 09:13:16.868 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_constraintid__SYS.SYSCONSTRAINTS,SYS.SYSKEYS/2042198736] for statement [SELECT conS.CONSTRAINTID 	FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys WHERE TABS.TABLEID = conS.TABLEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND conS.type = 'P' AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%'] schema=SYS

[info 2014/01/10 09:13:16.868 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_constraintid__SYS.SYSCONSTRAINTS,SYS.SYSKEYS/2042198736

[info 2014/01/10 09:13:16.906 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-658592416] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = COLS.REFERENCEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' and SCHEMAS.SCHEMAID = TABS.SCHEMAID AND TABS.TABLEID = IDX.TABLEID and IDX.CONGLOMERATENUMBER = ? AND (CASE WHEN IDX.DESCRIPTOR IS NOT NULL THEN IDX.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() ) ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:16.906 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-658592416

[info 2014/01/10 09:13:16.965 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-998393548] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, CAST( P.GRANTOR AS VARCHAR(128)) AS GRANTOR, CAST( P.GRANTEE AS VARCHAR(128)) AS GRANTEE, CASE WHEN (P.TYPE = 's' OR P.TYPE = 'S') THEN CAST( 'SELECT' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'd' OR P.TYPE = 'D') THEN CAST( 'DELETE' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'i' OR P.TYPE = 'I') THEN CAST( 'INSERT' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'u' OR P.TYPE = 'U') THEN CAST( 'UPDATE' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'r' OR P.TYPE = 'R') THEN CAST( 'REFERENCES' AS VARCHAR(128)) ELSE CAST( 'TRIGGER' AS VARCHAR(128)) END END END END END AS PRIVILEGE, CASE WHEN (P.TYPE = 's' OR P.TYPE = 'd' OR P.TYPE = 'i' OR P.TYPE = 'u' OR P.TYPE = 'r' OR P.TYPE = 't') THEN CAST( 'NO' AS VARCHAR(128)) ELSE CAST( 'YES' AS VARCHAR(128)) END AS IS_GRANTABLE FROM SYS.SYSCOLPERMS P, SYS.SYSCOLUMNS C, SYS.SYSTABLES T, SYS.SYSSCHEMAS S WHERE P.TABLEID = T.TABLEID AND C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?)  AND (T.TABLENAME=?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) AND P.COLUMNS.isSet( C.COLUMNNUMBER - 1) ORDER BY COLUMN_NAME, PRIVILEGE] schema=SYS

[info 2014/01/10 09:13:16.965 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-998393548

[info 2014/01/10 09:13:16.977 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_type/1717305902] for statement [SELECT CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12)) AS TABLE_TYPE FROM (VALUES 'SYNONYM', 'SYSTEM TABLE', 'TABLE', 'VIEW') TABLETYPES(TABLE_TYPE) ORDER BY TABLE_TYPE] schema=SYS

[info 2014/01/10 09:13:16.977 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_type/1717305902

[info 2014/01/10 09:13:16.990 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,key_seq,pk_name/-73300787] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, COLS.COLUMNNAME AS COLUMN_NAME, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CONS.CONSTRAINTNAME AS PK_NAME FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
 SYS.SYSTABLES T --SQLFIRE-PROPERTIES index='SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS S --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSSCHEMAS_INDEX1'  
, SYS.SYSCONSTRAINTS CONS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSCONSTRAINTS_INDEX3'  
, SYS.SYSKEYS KEYS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSCOLUMNS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=? AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND T.SCHEMAID = S.SCHEMAID AND	T.TABLEID = COLS.REFERENCEID AND T.TABLEID = CONGLOMS.TABLEID AND CONS.TABLEID = T.TABLEID AND CONS.TYPE = 'P' AND CONS.CONSTRAINTID = KEYS.CONSTRAINTID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ORDER BY COLUMN_NAME] schema=SYS

[info 2014/01/10 09:13:16.990 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,key_seq,pk_name/-73300787

[info 2014/01/10 09:13:17.039 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/-1307675697] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || (CAST (RTRIM(CAST(AUTOINCREMENTSTART AS CHAR(12))) AS VARCHAR(12))) || ' increment ' || (CAST (RTRIM(CAST(AUTOINCREMENTINC AS CHAR(12))) AS VARCHAR(12))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION] schema=SYS

[info 2014/01/10 09:13:17.039 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/-1307675697

[info 2014/01/10 09:13:17.082 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/-402294602] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, (CASE WHEN CONGLOMS.DESCRIPTOR.isUnique() THEN FALSE ELSE TRUE END) AS NON_UNIQUE, CAST ('' AS VARCHAR(128)) AS INDEX_QUALIFIER, CONGLOMS.CONGLOMERATENAME AS INDEX_NAME, java.sql.DatabaseMetaData::tableIndexOther AS TYPE, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS ORDINAL_POSITION, COLS.COLUMNNAME AS COLUMN_NAME, CASE WHEN CONGLOMS.DESCRIPTOR.isAscending( CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER)) THEN 'A' ELSE 'D' END AS ASC_OR_DESC, CAST(NULL AS INT) AS CARDINALITY, CAST(NULL AS INT) AS PAGES, CAST(NULL AS VARCHAR(128)) AS FILTER_CONDITION FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE T.TABLEID = CONGLOMS.TABLEID AND T.TABLEID = COLS.REFERENCEID AND T.SCHEMAID = S.SCHEMAID AND CONGLOMS.ISINDEX AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=?  AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ( CASE WHEN ? THEN CONGLOMS.DESCRIPTOR.isUnique() ELSE (1=1) END) AND ((1=1) OR ?<>0) ORDER BY NON_UNIQUE, TYPE, INDEX_NAME, ORDINAL_POSITION] schema=SYS

[info 2014/01/10 09:13:17.082 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/-402294602

[info 2014/01/10 09:13:17.134 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/1362568576] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0 ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:17.134 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/1362568576

[info 2014/01/10 09:13:17.145 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,supertype_cat,supertype_schem,supertype_name__SYSIBM.SYSDUMMY1/197965734] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TYPE_CAT, CAST(NULL AS VARCHAR(128)) AS TYPE_SCHEM, VARCHAR('', 128) AS TYPE_NAME, CAST(NULL AS VARCHAR(128)) AS SUPERTYPE_CAT, CAST(NULL AS VARCHAR(128)) AS SUPERTYPE_SCHEM, VARCHAR('', 128) AS SUPERTYPE_NAME FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2014/01/10 09:13:17.145 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,supertype_cat,supertype_schem,supertype_name__SYSIBM.SYSDUMMY1/197965734

[info 2014/01/10 09:13:17.180 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/186574963] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() ) ) JDBC_SUBQUERY] schema=SYS

[info 2014/01/10 09:13:17.180 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/186574963

[info 2014/01/10 09:13:17.351 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1634581889] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0] schema=SYS

[info 2014/01/10 09:13:17.351 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1634581889

[info 2014/01/10 09:13:17.438 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/836363518] for statement [SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, CAST(T2 AS SMALLINT) AS DATA_TYPE, T3 AS COLUMN_SIZE, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, CAST (T8 AS SMALLINT) AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, CAST (CASE WHEN (T10 IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN T10 ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS UNSIGNED_ATTRIBUTE, CAST (T11 AS SMALLINT) AS FIXED_PREC_SCALE, CAST (CASE WHEN (T12 IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN T12 ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS AUTO_UNIQUE_VAL, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (CASE WHEN (T2 IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE T2 END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (T2 = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (T2 = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (T2 = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (T2 IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE T18 END AS NUM_PREC_RADIX, CAST (NULL AS SMALLINT) AS INTERVAL_PRECISION FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18) WHERE T2 = ?] schema=SYS

[info 2014/01/10 09:13:17.438 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/836363518

[info 2014/01/10 09:13:17.460 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type/-1423248225] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS RESERVED1, CAST (NULL AS INT) AS RESERVED2, CAST (NULL AS INT) AS RESERVED3, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY 2,3] schema=SYS

[info 2014/01/10 09:13:17.460 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type/-1423248225

[info 2014/01/10 09:13:17.468 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat/-1654662599] for statement [SELECT TABLE_CAT FROM ( VALUES ('') ) AS CATALOGS(TABLE_CAT) WHERE (1=0)] schema=SYS

[info 2014/01/10 09:13:17.468 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat/-1654662599

[info 2014/01/10 09:13:17.492 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1535943477] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, S.SCHEMANAME AS PKTABLE_SCHEM, TABLENAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FKCOLUMN_NAME, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN FK_UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN FK_UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN FK_DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN FK_DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN FK_DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN FK_DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END) END) END)  AS SMALLINT) AS DELETE_RULE, FK_NAME, CONSTRAINTNAME AS PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT F2.keyCONSTRAINTID AS FK_ID, FKTB_SCHEMA AS FKTABLE_SCHEM, FKTB_NAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS KEY_SEQ, C2.CONSTRAINTNAME AS FK_NAME, F2.DELETERULE AS FK_UPDATERULE, F2.DELETERULE AS FK_DELETERULE FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T2.TABLEID AS FKTB_ID, S2.SCHEMANAME AS FKTB_SCHEMA, T2.TABLENAME AS FKTB_NAME FROM  SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME=? AND S2.SCHEMAID = T2.SCHEMAID ) AS FKTB (FKTB_ID, FKTB_SCHEMA, FKTB_NAME), SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE FKTB.FKTB_ID = C2.TABLEID AND F2.CONSTRAINTID = C2.CONSTRAINTID AND FKTB.FKTB_ID = COLS2.REFERENCEID AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID ) AS FKINFO(FK_ID, FKTABLE_SCHEM, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, FK_NAME, FK_UPDATERULE, FK_DELETERULE), SYS.SYSCONSTRAINTS c --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1' 
, SYS.SYSTABLES T --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2' 
, SYS.SYSSCHEMAS S --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE T.TABLEID = C.TABLEID AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND C.CONSTRAINTID = FKINFO.FK_ID  AND FKINFO.KEY_SEQ = CONGLOMS.DESCRIPTOR.getKeyColumnPosition(  COLS.COLUMNNUMBER) AND S.SCHEMAID = T.SCHEMAID AND K.CONSTRAINTID = C.CONSTRAINTID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID  AND C.TABLEID = COLS.REFERENCEID  ORDER BY PKTABLE_CAT,  PKTABLE_SCHEM, PKTABLE_NAME, PK_NAME, KEY_SEQ] schema=SYS

[info 2014/01/10 09:13:17.492 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1535943477

[info 2014/01/10 09:13:17.514 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_conglomeratenumber,numcols/-11512973] for statement [SELECT IDX.CONGLOMERATENUMBER, IDX.DESCRIPTOR.numberOfOrderedColumns() AS NUMCOLS FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX WHERE SCHEMAS.SCHEMAID = TABS.SCHEMAID and not IDX.ISCONSTRAINT AND TABS.TABLEID = IDX.TABLEID  AND (CASE WHEN IDX.DESCRIPTOR IS NULL THEN (1=0) ELSE IDX.DESCRIPTOR.isUnique() END)  AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?) AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' ORDER BY NUMCOLS] schema=SYS

[info 2014/01/10 09:13:17.514 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_conglomeratenumber,numcols/-11512973

[info 2014/01/10 09:13:17.537 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-1370252503] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = COLS.REFERENCEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' and SCHEMAS.SCHEMAID = TABS.SCHEMAID AND TABS.TABLEID = IDX.TABLEID and IDX.CONGLOMERATENUMBER = ? AND (CASE WHEN IDX.DESCRIPTOR IS NOT NULL THEN IDX.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() )] schema=SYS

[info 2014/01/10 09:13:17.537 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-1370252503

[info 2014/01/10 09:13:17.582 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_t/-823155316] for statement [SELECT JDBC_SUBQUERY.PROCEDURE_CAT AS PROCEDURE_CAT, JDBC_SUBQUERY.PROCEDURE_SCHEM AS PROCEDURE_SCHEM, JDBC_SUBQUERY.PROCEDURE_NAME AS PROCEDURE_NAME, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, JDBC_SUBQUERY.COLUMN_TYPE AS COLUMN_TYPE, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.BUFFER_LENGTH AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS NUM_PREC_RADIX, JDBC_SUBQUERY.NULLABLE AS NULLABLE, JDBC_SUBQUERY.REMARKS AS REMARKS, CAST (NULL AS VARCHAR(254)) AS COLUMN_DEF, CAST ((CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END) AS SMALLINT) AS SQL_DATA_TYPE, CAST ((CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END) AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN JDBC_SUBQUERY.BUFFER_LENGTH ELSE CAST (NULL AS INT) END AS CHAR_OCTET_LENGTH, CAST ((JDBC_SUBQUERY.PARAMETER_ID + 1) AS INT) AS ORDINAL_POSITION, CAST ((CASE WHEN (JDBC_SUBQUERY.NULLABLE IN (java.sql.DatabaseMetaData::procedureNullable)) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, JDBC_SUBQUERY.METHOD_ID AS METHOD_ID, JDBC_SUBQUERY.PARAMETER_ID AS PARAMETER_ID FROM ( SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, A.ALIAS AS PROCEDURE_NAME, V."COLUMN_NAME" AS COLUMN_NAME, V."COLUMN_TYPE" AS COLUMN_TYPE, V."DATA_TYPE" AS DATA_TYPE, V."TYPE_NAME" AS TYPE_NAME, V."PRECISION" AS COLUMN_SIZE, V."LENGTH" AS BUFFER_LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS DECIMAL_DIGITS, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS NUM_PREC_RADIX, V."NULLABLE" AS NULLABLE, V."REMARKS" AS REMARKS, V."METHOD_ID" AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE ALIASTYPE = 'P' AND SCHEMANAME LIKE ? AND A.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ) JDBC_SUBQUERY ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2014/01/10 09:13:17.582 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_t/-823155316

[info 2014/01/10 09:13:17.594 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLUDTS(?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.614 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,/-85117902] for statement [SELECT	M->allProceduresAreCallable(),	M->allTablesAreSelectable(),	M->nullsAreSortedHigh(),	M->nullsAreSortedLow(),	M->nullsAreSortedAtStart(),	M->nullsAreSortedAtEnd(),	M->usesLocalFiles(),	M->usesLocalFilePerTable(),	M->storesUpperCaseIdentifiers(),	M->storesLowerCaseIdentifiers(),	M->storesMixedCaseIdentifiers(),	M->storesUpperCaseQuotedIdentifiers(),	M->storesLowerCaseQuotedIdentifiers(),	M->storesMixedCaseQuotedIdentifiers(),	M->getSQLKeywords(),	M->getNumericFunctions(),	M->getStringFunctions(),	M->getSystemFunctions(),	M->getTimeDateFunctions(),	M->getSearchStringEscape(),	M->getExtraNameCharacters(),	M->supportsAlterTableWithAddColumn(),	M->supportsAlterTableWithDropColumn(),	M->supportsConvert(),	'1', M->supportsDifferentTableCorrelationNames(),	M->supportsExpressionsInOrderBy(),	M->supportsOrderByUnrelated(),	M->supportsGroupBy(),	M->supportsGroupByUnrelated(),		M->supportsGroupByBeyondSelect(),	M->supportsMultipleResultSets(),	M->supportsMultipleTransactions(),	M->supportsCoreSQLGrammar(),	M->supportsExtendedSQLGrammar(),	M->supportsANSI92IntermediateSQL(),	M->supportsANSI92FullSQL(),	M->supportsIntegrityEnhancementFacility(),	M->supportsOuterJoins(),	M->supportsFullOuterJoins(),	M->supportsLimitedOuterJoins(),	M->getSchemaTerm(),	M->getProcedureTerm(),	M->getCatalogTerm(),	M->isCatalogAtStart(),	M->getCatalogSeparator(),	M->supportsSchemasInDataManipulation(),	M->supportsSchemasInProcedureCalls(),	M->supportsSchemasInTableDefinitions(),	M->supportsSchemasInIndexDefinitions(),	M->supportsSchemasInPrivilegeDefinitions(),	M->supportsCatalogsInDataManipulation(),	M->supportsCatalogsInProcedureCalls(),	M->supportsCatalogsInTableDefinitions(),	M->supportsCatalogsInIndexDefinitions(),	M->supportsCatalogsInPrivilegeDefinitions(),	M->supportsPositionedDelete(),	M->supportsPositionedUpdate(),	M->supportsSelectForUpdate(),	M->supportsStoredProcedures(),	M->supportsSubqueriesInComparisons(),	M->supportsUnion(),	M->supportsUnionAll(),	M->supportsOpenCursorsAcrossCommit(),	M->supportsOpenCursorsAcrossRollback(),	M->supportsOpenStatementsAcrossCommit(),	M->supportsOpenStatementsAcrossRollback(),	M->getMaxBinaryLiteralLength(),	M->getMaxCharLiteralLength(),	M->getMaxColumnNameLength(),	M->getMaxColumnsInGroupBy(),	M->getMaxColumnsInIndex(),	M->getMaxColumnsInOrderBy(),	M->getMaxColumnsInSelect(),	M->getMaxColumnsInTable(),	M->getMaxConnections(),	M->getMaxCursorNameLength(),	M->getMaxIndexLength(),	M->getMaxSchemaNameLength(),	M->getMaxProcedureNameLength(),	M->getMaxCatalogNameLength(),	M->getMaxRowSize(),	M->doesMaxRowSizeIncludeBlobs(),	M->getMaxStatementLength(),	M->getMaxStatements(),	M->getMaxTableNameLength(),	M->getMaxTablesInSelect(),	M->getMaxUserNameLength(),	M->getDefaultTransactionIsolation(),	M->supportsTransactions(),	'1,2,4,8' ,	M->supportsDataDefinitionAndDataManipulationTransactions(),	M->supportsDataManipulationTransactionsOnly(),	M->dataDefinitionCausesTransactionCommit(),	M->dataDefinitionIgnoredInTransactions(), 	(cast (RTRIM(CAST(java.sql.ResultSet::TYPE_FORWARD_ONLY as CHAR(10))) AS VARCHAR(10)) || (',') || (cast (RTRIM(CAST(java.sql.ResultSet::TYPE_SCROLL_INSENSITIVE AS CHAR(10))) as VARCHAR(10)))), '1003,1007,1008;1004,1007,1008;1005', '','','','1003','1003','1003','','','',M->supportsBatchUpdates()from (values(getCurrentConnection()->getMetaData())) as DBMetaData(M)] schema=SYSIBM

[info 2014/01/10 09:13:17.614 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,/-85117902

[info 2014/01/10 09:13:17.627 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLSTATISTICS(?,_?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.630 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLCOLUMNS(?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.633 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETCATALOGS=1')

[info 2014/01/10 09:13:17.636 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPROCEDURES(?,_?,_?,_?)

[info 2014/01/10 09:13:17.638 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES(?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.641 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLCOLPRIVILEGES(?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.644 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETSCHEMAS=1')

[info 2014/01/10 09:13:17.647 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLFOREIGNKEYS(?,_?,_?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.650 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPROCEDURECOLS(?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.653 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLSPECIALCOLUMNS(?,_?,_?,_?,_?,_?,_?)

[info 2014/01/10 09:13:17.657 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETTABLETYPES=1')

[info 2014/01/10 09:13:17.659 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLGETTYPEINFO(?,_?)

[info 2014/01/10 09:13:17.661 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLEPRIVILEGES(?,_?,_?,_?)

[info 2014/01/10 09:13:17.664 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPRIMARYKEYS(?,_?,_?,_?)

[info 2014/01/10 09:13:17.772 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=create_index_SYSSTAT.idx_rs_dist_rs_id_on_SYSXPLAIN_RESULTSETS(dist_rs_id)

[info 2014/01/10 09:13:17.819 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=create_index_SYSSTAT.idx_dist_dist_rs_id_on_SYSXPLAIN_DIST_PROPS(dist_rs_id)

[info 2014/01/10 09:13:17.826 EST  <main> tid=0x1] FabricDatabase: initial DDL replay completed.

[info 2014/01/10 09:13:17.826 EST  <main> tid=0x1] FabricDatabase: Authentication recheck successful.

[info 2014/01/10 09:13:17.828 EST SQLF:TraceFabricServiceBoot <main> tid=0x1] Starting a new network server on: localhost/127.0.0.1[1528]
Could not connect to SQLFire Network Server on host 127.0.0.1, port 1528: Connection refused
VMware vFabric SQLFire Network Server - 10.4.2.0 - (42624) started and ready to accept connections on port 1528 at 2014/01/10 09:13:17.862 EST 

[warning 2014/01/10 09:13:17.918 EST  <NetworkServerThread_17> tid=0x40] (tid=10 msgId=0) Failed to set options {OPT_KEEPIDLE=20, OPT_KEEPINTVL=1, OPT_KEEPCNT=10} on socket: java.lang.UnsupportedOperationException: setting native socket options [OPT_KEEPIDLE, OPT_KEEPINTVL, OPT_KEEPCNT] not possible in generic implementation

[info 2014/01/10 09:13:41.963 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.ORDERS] with table-default-partitioned=false

[info 2014/01/10 09:13:41.975 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 154: created conglomerate with id 85: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true]

[info 2014/01/10 09:13:42.015 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 86 name = 2__ORDERS__ORDERID uuid = 504bc13b-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 86) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.023 EST  <main> tid=0x1] Initializing region ORDERS

[info 2014/01/10 09:13:42.023 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."ORDERS" with UUID: 489a813c-0143-7c7e-c5af-00000477cb10

[info 2014/01/10 09:13:42.031 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.FILLDETAILS] with table-default-partitioned=false

[info 2014/01/10 09:13:42.033 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 156: created conglomerate with id 87: [table: APP.FILLDETAILS, id: Container(0, 87), isApplicationTable=true]

[info 2014/01/10 09:13:42.039 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 88 name = 2__FILLDETAILS__EXECUTIONID uuid = ba784142-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 88) on base container: [table: APP.FILLDETAILS, id: Container(0, 87), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.042 EST  <main> tid=0x1] Initializing region FILLDETAILS

[info 2014/01/10 09:13:42.042 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."FILLDETAILS" with UUID: d2c8c143-0143-7c7e-c5af-00000477cb10

[info 2014/01/10 09:13:42.045 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.FILLALLOCATIONS] with table-default-partitioned=false

[info 2014/01/10 09:13:42.046 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 158: created conglomerate with id 89: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true]

[info 2014/01/10 09:13:42.051 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 90 name = 2__FILLALLOCATIONS__FILLID uuid = 34b10149-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 90) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.054 EST  <main> tid=0x1] Initializing region FILLALLOCATIONS

[info 2014/01/10 09:13:42.054 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."FILLALLOCATIONS" with UUID: 7d03414a-0143-7c7e-c5af-00000477cb10

[info 2014/01/10 09:13:42.072 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: INSTT

[info 2014/01/10 09:13:42.072 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 91 name = INSTT uuid = 2ef60150-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 91) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.088 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: PORD

[info 2014/01/10 09:13:42.088 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 92 name = PORD uuid = 3f9e4152-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 92) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.103 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: DTDSK

[info 2014/01/10 09:13:42.103 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 93 name = DTDSK uuid = 90478154-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 93) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.117 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: SCDSK

[info 2014/01/10 09:13:42.117 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 94 name = SCDSK uuid = a0f1c156-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 94) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.132 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ORDT

[info 2014/01/10 09:13:42.132 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 95 name = ORDT uuid = f19d0158-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 95) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.145 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: RORD

[info 2014/01/10 09:13:42.145 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 96 name = RORD uuid = 0249415a-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 96) on base container: [table: APP.ORDERS, id: Container(0, 85), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.155 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: INST

[info 2014/01/10 09:13:42.155 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 97 name = INST uuid = 52f6815c-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 97) on base container: [table: APP.FILLDETAILS, id: Container(0, 87), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.160 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: PFID

[info 2014/01/10 09:13:42.160 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 98 name = PFID uuid = 63a4c15e-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 98) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.165 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: FIDT

[info 2014/01/10 09:13:42.165 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 99 name = FIDT uuid = b4540160-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 99) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.169 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ORD

[info 2014/01/10 09:13:42.169 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 100 name = ORD uuid = c5044162-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 100) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.174 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: EXIDX

[info 2014/01/10 09:13:42.174 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 101 name = EXIDX uuid = 15b58164-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 101) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:13:42.179 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ITNUM

[info 2014/01/10 09:13:42.179 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 102 name = ITNUM uuid = 2667c166-0143-7c7e-c5af-00000477cb10 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 102) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 89), isApplicationTable=true] caseSensitive = true indexable = true

[info 2014/01/10 09:14:52.326 EST SQLF: <CS-I-0> tid=0x59] (XID = 226(UserTransaction)@183c97db;txState=null;supportsTX=true), (SESSIONID = 37), (DATABASE = sqlfire), (DRDAID = null), Failed Statement is: insert into Orders (ACTREPORTINFO2, AESINSTANCEID, AESMVDSEQUENCESTATUS, AESOMINSTANCEID, AESOMORDERID, AESOMPARENTORDERID, AESOMROUTINGDEST, AESORDERGENERATORID, AESORDERINTERNALSTATE, AESPAUSECODE, AESROUTINGRESTRICTIONS, ACCOUNT, ACCOUNTTYPE, ACCRUEDINTEREST, ADDITIONALFEE, ADJUSTTKTPRICE, ALLORNONE, ALLOCQUANTITY, ANONYMOUS, ARRIVALPRICE, ASOFTIMESTAMP, AUTOALLOCATE, AUTOBOOKEXTERNALACCOUNT, AUTOBOOKINTERNALACCOUNT, AUTOCONFIRMATION, AUTOTRADE, AVERAGEFXRATE, AVERAGEPRICE, AVGFXFORWARDPOINTS, BACKCANCELCORRECT, BACKOFFICEORDERID, BACKOFFICESYSTEM, BACKOFFICETACTIC, BARGAINTERMCODE, BASECURRENCY, BASKETLEGID, BASKETTYPE, BLOCKTRADEBROKERKEY, BLOCKTRADEREPORTCODE, BOOKINGENTITY, BOOKINGSECURITYID, BOOKINGSECURITYIDSOURCE, BRANCHSEQNUMBER, BULLETINBOARDSIZE, CANCELSTATE, CHANGEDTIMESTAMP, CHECKEDCASHVALUE, CHECKEDCLIENTACCOUNT, CHECKEDGROUPID, CHECKEDNETSELL, CLEARINGINSTRUCTIONS, CLIENTID, CLIENTLOCATION, CLIENTORDERID, CLIENTPORTFOLIOID, CLIENTSECURITYID, CLIENTSECURITYIDSOURCE, COMMISSION, COMMISSIONTYPE, COMPRESSPARAMETER, COMPRESSTIMEOUT, CONNECTIONID, CONTROLLINGUSER, COUPON, CROSSINSTRUCTIONS, CROSSINTERNALPRICE, CUMULATIVEQUANTITY, CURRENTMARKER, CUSTOMERACCOUNT, DAYCUMULATIVEQUANTITY, DEFAULTDESTINATION, DELIVERYTYPE, DESTINATIONACCOUNTTYPE, DESTINATIONDESK, DESTINATIONREGIONCODE, DESTINATIONSERVICEMESSAGE, DESTINATIONSERVICENAME, DESTINATIONSERVICEORDERID, DESTINATIONSERVICESEQNUM, DESTINATIONUSER, DESTINATIONUSERCC, DISCRETION, DIVIDENDADJUSTMENT, EXTRIGGERACTIVATIONSTATUS, EXCHANGE, EXCHANGERATE, EXCHANGETAG, EXCHANGETRADEDATE, EXECUTIONALGO, EXECUTIONCAPACITY, EXECUTIONMODE, EXECUTIONPRICE, EXECUTIONTRIGGER, EXTERNALCLIENTORDERID, FIXSESSIONID, FOBOORDERTRADEID, FXAVERAGEPRICEALLIN, FXCCY2, FXCUMULATIVEQUANTITYBASECCY, FXCUMULATIVEQUANTITYLOCALCCY, FXFWSWFARLEGSETTLEMENT, FXFWSWNEARLEGSETTLEMENT, FXFWSWQUOTEID, FXFWDBOOKINGSTATUS, FXFWDINSTRUCTIONS, FXLOCALCCYRATE, FXQUANTITYLOCALCCY, FXRATE, GIVEUP, IOI, INSTANCEID, INTERMARKETSWEEP, INTERNALCROSSELIGIBLE, INTERNALIOI, INTERNALIOIPRICE, INTERNALIOIQUANTITY, INVESTORID, JITNEYBROKERCODE, LASTUSER, LATESTFXFORWARDPOINTS, LEAVESQUANTITY, LOCALTAXES, LOCATEBROKERID, LOCATEPROVIDED, LOCATEDSHARES, MLID, MLLEGNUMBER, MLPARENTID, MLPARENTLEGNUMBER, MLPARENTTOTALLEGS, MLTOTALLEGS, MARKETHELD, MARKUPPRICE, MATURITYDATE, MAXSHOW, MEMO, MIFIDROUTING, MIFIDSHOWLMT, MIFIDTKTQUANTITY, MINACCEPTABLEQUANTITY, MINCOMMISSION, NYSERULE92TERMS, NOTHINGDONEFLAG, OPENCLOSEINDICATOR, ORDERBOOKINGSTATE, ORDERENTRYTYPE, ORDERID, ORDERORIGINATORREGIONCODE, ORDERRECEIPTTIMESTAMP, ORDERTIMESTAMP, PADJUSTTKTPRICE, PCLIENTORDERID, PEXECUTIONALGO, PEXECUTIONMODE, PEXECUTIONTRIGGER, PEXTERNALCLIENTORDERID, PFXQUANTITYLOCALCCY, PMARKETHELD, PMAXSHOW, PMEMO, PPRICEINSTRUCTION, PQUANTITY, PQUOTESIZE, PSSEXEMPTCODE, PSIDE, PTMLEVY, PTIMEINFORCE, PAIRSMAXLEGQUANTITY, BID, ASK, PAIRSSTOPLOSSAMOUNT, PARENTORDERID, PRECISION, PRICEINSTRUCTION, PRIMARYEXCHANGE, PUTORCALL, QUANTITY, QUERYID, QUOTESIZE, RECONCILED, RECYCLEDATE, REFERENCEGROUPID, REFERENCEORDERID, REGNMSEXEMPTCODE, REGNMSOPTOUTISO, REJECTEDSHARES, REPNUMBER, ROLLUP, ROOTORDERID, ROUTEFLAG, ROUTETEXT, ROUTETYPE, RULETYPE, SSEXEMPTCODE, SALESCREDIT, SALESCREDITACCOUNT, SCHEDULECODE, SECURITYID, SECURITYIDASENTERED, SECURITYIDSOURCE, SECURITYROOTID, SECURITYROOTIDSOURCE, SECURITYSUBTYPE, SECURITYTYPE, SERVERID, SETTLEMENTCURRENCY, SETTLEMENTCURRENCYPRICE, SETTLEMENTINSTRUCTION, SIDE, SOFTCOMMISSION, SOLICITATION, SOURCEDESK, SOURCEREGIONCODE, SOURCESERVICENAME, SOURCESERVICEORDERID, SOURCESERVICEUSER, SOURCEUSER, SOURCEUSERCC, STAMPTAX, STATE, STLCURAVERAGEPRICE, STOPPRICE, STOPPEDTIME, STRATEGYACCOUNT, STRATEGYCROSSACCOUNT, STRIKEPRICE, SWITCHACCOUNT, TSXBYPASS, TSXREGID, TACTIC, TAXTYPE, TIMEINFORCE, TOPTRADE, TRANCHE, TRANSACTIONNAME, TRANSACTIONNUMBER, TRANSACTIONTIMESTAMP, UNDERLYINGSECURITYID, UNIQUECLIENTORDERID, WSSAREACODE, WAVEID, WAVEMARK, WGHTEDSUMAVERAGEFXRATE, WGHTEDSUMAVERAGEPRICE, WGHTEDSUMSTLCURAVERAGEPRICE, RISK, RANK, ADVISORYBROKER, GLOBALREFERENCEGROUPID, ORDERTYPETAG, EXTERNALCLIENTBOOKINGTAG, ORIGINALLCDTAG, UNSOLICITEDOUT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) with 253 parameters ;value=,type=0;value=1,type=0;value=1,type=0;value=1,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=1,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=2014-01-10 09:14:52.319,type=0;value=1,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=2014-01-10 09:14:52.319,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=1,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=1,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=2014-01-10 09:14:52.319,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=1,type=0;value=1,type=0;value=1,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=1,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=A110,type=0;value=,type=0;value=2014-01-10 09:14:52.319,type=0;value=2014-01-10 09:14:52.319,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=1,type=0;value=2014-01-10,type=0;value=1,type=0;value=1,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=1,type=0;value=,type=0;value=1,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=2014-01-10 09:14:52.319,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=1,type=0;value=2014-01-10 09:14:52.319,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=10.0999999999999996447286321199499070644378662109375,type=0;value=,type=0;value=1,type=0;value=,type=0;value=,type=0;value=,type=0;value=,type=0;value=1,type=0;value=,type=0

[info 2014/01/10 09:14:52.328 EST SQLF: <CS-I-0> tid=0x59] ERROR 23505: The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'primary key constraint' defined on 'APP.ORDERS'.

[warning 2014/01/10 09:15:28.369 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x5d] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.369 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x5c] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.369 EST SQLF:SignalHandler <SIGTERM handler> tid=0x5b] received explicit OS signal SIGTERM
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.371 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x5f] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.371 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x5e] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.374 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x61] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.375 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x62] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[info 2014/01/10 09:15:28.375 EST  <Distributed system shutdown hook> tid=0xb] VM is exiting - shutting down distributed system

[warning 2014/01/10 09:15:28.375 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x63] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.377 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x64] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.379 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x66] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.380 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x65] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[warning 2014/01/10 09:15:28.382 EST SQLF:SignalHandler <SIGPIPE handler> tid=0x67] received explicit OS signal SIGPIPE
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:680)


[info 2014/01/10 09:15:28.387 EST  <Distributed system shutdown hook> tid=0xb] GemFireCache[id = 1667298751; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Fri Jan 10 09:13:08 EST 2014; server = false; copyOnRead = false; lockLease = 120; lockTimeout = 60]: Now closing.

[info 2014/01/10 09:15:28.387 EST  <Distributed system shutdown hook> tid=0xb] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool CMS Old Gen

[info 2014/01/10 09:15:28.396 EST  <Distributed system shutdown hook> tid=0xb] Created oplog#1 krf for disk store SQLF-DD-DISKSTORE.

[info 2014/01/10 09:15:28.399 EST  <Distributed system shutdown hook> tid=0xb] Created oplog#1 krf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2014/01/10 09:15:28.416 EST  <Distributed system shutdown hook> tid=0xb] Unlocked disk store SQLF-DD-DISKSTORE

[info 2014/01/10 09:15:28.426 EST  <Distributed system shutdown hook> tid=0xb] Unlocked disk store SQLF-DEFAULT-DISKSTORE

[info 2014/01/10 09:15:28.429 EST  <Distributed system shutdown hook> tid=0xb] Shutting down DistributionManager usxxmartef3m1(53766):57209. 

[info 2014/01/10 09:15:28.531 EST  <Distributed system shutdown hook> tid=0xb] Now closing distribution for usxxmartef3m1(53766):57209

[config 2014/01/10 09:15:28.534 EST  <Distributed system shutdown hook> tid=0xb] Membership: sending new view [[usxxmartef3m1(53766)<v0>:57209|1] []] (0 mbrs)
  

[config 2014/01/10 09:15:28.534 EST  <Distributed system shutdown hook> tid=0xb] 
     member usxxmartef3m1(53766)<v0>:57209 has a weight of 15

[info 2014/01/10 09:15:28.538 EST  <Distributed system shutdown hook> tid=0xb] DistributionManager stopped in 108ms.

[info 2014/01/10 09:15:28.538 EST  <Distributed system shutdown hook> tid=0xb] Marking DistributionManager usxxmartef3m1(53766):57209 as closed.
