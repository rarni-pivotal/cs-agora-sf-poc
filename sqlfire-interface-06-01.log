
[info 2013/12/15 23:04:42.075 EST  <main> tid=0x1] 
  ---------------------------------------------------------------------------
  
    Copyright (C) 1997-2013 VMware, Inc. All rights reserved. This product is
    protected by U.S. and international copyright and intellectual property
    laws. VMware products are covered by one or more patents listed at
    http://www.vmware.com/go/patents.  VMware is a registered trademark or
    trademark of VMware, Inc. in the United States and/or other jurisdictions.
    All other marks and names mentioned herein may be trademarks of their
    respective companies.
  
  ---------------------------------------------------------------------------
  Java version:   1.1.1 build 42624 08/05/2013 10:14:33 PDT javac 1.6.0_26
  Native version: native code unavailable
  Source revision: 42624
  Source repository: gemfire/branches/sqlfire110X_maint
  Running on: pivhdsne.localdomain/172.16.48.166, 2 cpu(s), amd64 Linux 2.6.32-358.el6.x86_64
  Process ID: 1135
  User: gpadmin
  Current dir: /home/gpadmin/workspace/SFBootStrap
  Home dir: /home/gpadmin
  Class Path:
    /home/gpadmin/workspace/SFBootStrap/bin
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/antlr.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/commons-cli.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/commons-logging.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/commons-modeler-2.0.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/jline.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/jna.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/mail.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/mx4j.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/mx4j-remote.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/mx4j-tools.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/sqlfire.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/sqlfireclient.jar
    /opt/vmware/vfabric-sqlfire/vFabric_SQLFire_111/lib/sqlfiretools.jar
    /home/gpadmin/Tools/jars/asg.cliche-110413.jar
    /home/gpadmin/projects/csagora/log4j.jar
  Library Path:
    /usr/java/jdk1.6.0_26/jre/lib/amd64/server
    /usr/java/jdk1.6.0_26/jre/lib/amd64
    /usr/java/jdk1.6.0_26/jre/../lib/amd64
    /usr/local/hawq/./lib
    /usr/local/hawq/./ext/python/lib
    /usr/java/packages/lib/amd64
    /usr/lib64
    /lib64
    /lib
    /usr/lib
  System Properties:
      file.encoding = UTF-8
      file.encoding.pkg = sun.io
      file.separator = /
      gemfire.append-log = true
      java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment
      java.awt.printerjob = sun.print.PSPrinterJob
      java.class.version = 50.0
      java.endorsed.dirs = /usr/java/jdk1.6.0_26/jre/lib/endorsed
      java.ext.dirs = /usr/java/jdk1.6.0_26/jre/lib/ext:/usr/java/packages/lib/ext
      java.home = /usr/java/jdk1.6.0_26/jre
      java.io.tmpdir = /tmp
      java.runtime.name = Java(TM) SE Runtime Environment
      java.runtime.version = 1.6.0_26-b03
      java.specification.name = Java Platform API Specification
      java.specification.vendor = Sun Microsystems Inc.
      java.specification.version = 1.6
      java.vendor = Sun Microsystems Inc.
      java.vendor.url = http://java.sun.com/
      java.vendor.url.bug = http://java.sun.com/cgi-bin/bugreport.cgi
      java.version = 1.6.0_26
      java.vm.info = mixed mode
      java.vm.name = Java HotSpot(TM) 64-Bit Server VM
      java.vm.specification.name = Java Virtual Machine Specification
      java.vm.specification.vendor = Sun Microsystems Inc.
      java.vm.specification.version = 1.0
      java.vm.vendor = Sun Microsystems Inc.
      java.vm.version = 20.1-b02
      line.separator = 
  
      os.version = 2.6.32-358.el6.x86_64
      p2p.useSSL = false
      path.separator = :
      sqlfire.log-file = sqlfire-interface.log
      sun.arch.data.model = 64
      sun.boot.class.path = /usr/java/jdk1.6.0_26/jre/lib/resources.jar:/usr/java/jdk1.6.0_26/jre/lib/rt.jar:/usr/java/jdk1.6.0_26/jre/lib/sunrsasign.jar:/usr/java/jdk1.6.0_26/jre/lib/jsse.jar:/usr/java/jdk1.6.0_26/jre/lib/jce.jar:/usr/java/jdk1.6.0_26/jre/lib/charsets.jar:/usr/java/jdk1.6.0_26/jre/lib/modules/jdk.boot.jar:/usr/java/jdk1.6.0_26/jre/classes
      sun.boot.library.path = /usr/java/jdk1.6.0_26/jre/lib/amd64
      sun.cpu.endian = little
      sun.cpu.isalist = 
      sun.desktop = gnome
      sun.io.unicode.encoding = UnicodeLittle
      sun.java.command = SFBootstrapper
      sun.java.launcher = SUN_STANDARD
      sun.jnu.encoding = UTF-8
      sun.management.compiler = HotSpot 64-Bit Tiered Compilers
      sun.nio.ch.bugLevel = 
      sun.os.patch.level = unknown
      user.country = US
      user.language = en
      user.timezone = America/New_York
  ---------------------------------------------------------------------------
  

[config 2013/12/15 23:04:42.088 EST  <main> tid=0x1] Startup Configuration:
   ### GemFire Properties defined with api ###
  locators=pivhdsne[56788]
  log-file=sqlfire-interface.log
  mcast-port=0
  statistic-archive-file=pivhdsne-stst.sfs
  statistic-sampling-enabled=true
  ### GemFire Properties using default values ###
  ack-severe-alert-threshold=0
  ack-wait-threshold=15
  archive-disk-space-limit=0
  archive-file-size-limit=0
  async-distribution-timeout=0
  async-max-queue-size=8
  async-queue-timeout=60000
  bind-address=
  cache-xml-file=cache.xml
  conflate-events=server
  conserve-sockets=true
  delta-propagation=true
  deploy-working-dir=/home/gpadmin/workspace/SFBootStrap
  disable-tcp=false
  distributed-system-id=-1
  durable-client-id=
  durable-client-timeout=300
  enable-network-partition-detection=false
  enable-time-statistics=false
  enforce-unique-host=false
  groups=
  jmx-manager=false
  jmx-manager-access-file=
  jmx-manager-bind-address=
  jmx-manager-hostname-for-clients=
  jmx-manager-http-port=8080
  jmx-manager-password-file=
  jmx-manager-port=1099
  jmx-manager-ssl=false
  jmx-manager-start=false
  jmx-manager-update-rate=2000
  license-application-cache=
  license-data-management=
  license-server-timeout=10000
  license-working-dir=
  log-disk-space-limit=0
  log-file-size-limit=0
  log-level=config
  max-num-reconnect-tries=3
  max-wait-time-reconnect=10000
  mcast-address=239.192.81.1
  mcast-flow-control=1048576, 0.25, 5000
  mcast-recv-buffer-size=1048576
  mcast-send-buffer-size=65535
  mcast-ttl=32
  member-timeout=5000
  membership-port-range=1024-65535
  memcached-port=0
  memcached-protocol=ASCII
  name=
  redundancy-zone=
  remote-locators=
  remove-unresponsive-client=false
  roles=
  security-=
  security-client-accessor=
  security-client-accessor-pp=
  security-client-auth-init=
  security-client-authenticator=
  security-client-dhalgo=
  security-log-file=
  security-log-level=config
  security-peer-auth-init=
  security-peer-authenticator=
  security-peer-verifymember-timeout=1000
  server-bind-address=
  socket-buffer-size=32768
  socket-lease-time=60000
  ssl-ciphers=any
  ssl-enabled=false
  ssl-protocols=any
  ssl-require-authentication=true
  start-locator=
  statistic-sample-rate=1000
  tcp-port=0
  udp-fragment-size=60000
  udp-recv-buffer-size=1048576
  udp-send-buffer-size=65535
  writable-working-dir=
  

[info 2013/12/15 23:04:42.092 EST  <main> tid=0x1] Defaulting license-working-dir to current working directory "/home/gpadmin/workspace/SFBootStrap".

[info 2013/12/15 23:04:42.095 EST  <main> tid=0x1] Acquiring default evaluation license.

[info 2013/12/15 23:04:50.278 EST  <main> tid=0x1] vFabric Licensing Client activation of license required 8183 milliseconds.

[info 2013/12/15 23:04:50.284 EST  <main> tid=0x1] Using the default evaluation license.

[info 2013/12/15 23:04:50.284 EST  <main> tid=0x1] Licensing required 8192 milliseconds.

[info 2013/12/15 23:04:50.340 EST  <main> tid=0x1] GemFire P2P Listener started on  tcp:///172.16.48.166:53556

[info 2013/12/15 23:04:50.479 EST  <main> tid=0x1] Attempting to join distributed system whose membership coordinator is 172.16.6.249(20867)<v0>:6812 using membership ID pivhdsne(1135):27224

[info 2013/12/15 23:05:57.494 EST  <main> tid=0x1] Membership: lead member is now pivhdsne(1135):27224

[config 2013/12/15 23:05:57.497 EST  <main> tid=0x1] This member, pivhdsne(1135):27224, is becoming group coordinator.

[info 2013/12/15 23:05:57.501 EST  <main> tid=0x1] Entered into membership in group GF7 with ID pivhdsne(1135):27224.

[info 2013/12/15 23:05:57.502 EST  <main> tid=0x1] Starting DistributionManager pivhdsne(1135):27224. 

[info 2013/12/15 23:05:57.503 EST  <main> tid=0x1] Initial (membershipManager) view =  [pivhdsne(1135):27224{lead}]

[info 2013/12/15 23:05:57.503 EST  <main> tid=0x1] Admitting member <pivhdsne(1135):27224>. Now there are 1 non-admin member(s).

[info 2013/12/15 23:05:57.503 EST  <main> tid=0x1] pivhdsne(1135):27224 is the elder and the only member.

[info 2013/12/15 23:05:57.508 EST  <main> tid=0x1] Did not hear back from any other system. I am the first one.

[info 2013/12/15 23:05:57.508 EST  <main> tid=0x1] DistributionManager pivhdsne(1135):27224 started on pivhdsne.localdomain[56788]. There were 0 other DMs. others: []  

[info 2013/12/15 23:05:57.539 EST  <Thread-6 StatSampler> tid=0x25] Renamed old existing archive to "pivhdsne-stst-05-01.sfs".

[info 2013/12/15 23:05:57.545 EST  <Thread-6 StatSampler> tid=0x25] Archiving statistics to "pivhdsne-stst.sfs".

[info 2013/12/15 23:05:57.683 EST  <main> tid=0x1] Initializing region _monitoringRegion_pivhdsne(1135)27224

[info 2013/12/15 23:05:57.727 EST  <main> tid=0x1] Initializing region PdxTypes

[info 2013/12/15 23:05:57.731 EST  <main> tid=0x1] GemFire Cache successfully created.

[info 2013/12/15 23:05:57.742 EST  <main> tid=0x1] SqlfHeapThreshold: Query Cancellation Thread Started with query cancellation interval 100ms

[config 2013/12/15 23:05:57.754 EST  <main> tid=0x1] GemFire Cache successfully booted with 
  --- file properties ---
  --- EMPTY ---
  --- boot connection properties ---
   enable-stats="true"
   locators="pivhdsne[56788]"
   mcast-port="0"
   sqlfire.access="memstore"
   sqlfire.authentication.required="false"
   sqlfire.database-object="com.vmware.sqlfire.internal.engine.db.FabricDatabase@639452f"
   sqlfire.engineType="2"
   sqlfire.serviceLocale="en_US"
   sqlfire.serviceProtocol="com.vmware.sqlfire.internal.database.Database"
   statistic-archive-file="pivhdsne-stst.sfs"
   statistic-sampling-enabled="true"
  --- end --
  

[config 2013/12/15 23:05:57.757 EST  <main> tid=0x1] This JVM is setup with SQLFire datastore role.

[info 2013/12/15 23:05:57.783 EST  <main> tid=0x1] Locked disk store SQLF-DEFAULT-DISKSTORE for exclusive access in directory: /home/gpadmin/workspace/SFBootStrap/.

[info 2013/12/15 23:05:57.814 EST  <main> tid=0x1] Recovered disk store SQLF-DEFAULT-DISKSTORE with unique id 856dab1e-5209-45dd-bfe1-bce067e86aee

[info 2013/12/15 23:05:57.818 EST  <main> tid=0x1] Recovering oplog#1 /home/gpadmin/workspace/SFBootStrap/./BACKUPSQLF-DEFAULT-DISKSTORE_1.drf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2013/12/15 23:05:57.819 EST  <main> tid=0x1] Recovering oplog#1 /home/gpadmin/workspace/SFBootStrap/./BACKUPSQLF-DEFAULT-DISKSTORE_1.krf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2013/12/15 23:05:57.828 EST  <main> tid=0x1] recovery oplog load took 10 ms

[info 2013/12/15 23:05:57.828 EST  <main> tid=0x1] Created oplog#2 drf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2013/12/15 23:05:57.831 EST  <main> tid=0x1] Created oplog#2 crf for disk store SQLF-DEFAULT-DISKSTORE.

[info 2013/12/15 23:05:57.833 EST  <main> tid=0x1] recovery region initialization took 5 ms

[info 2013/12/15 23:05:57.842 EST  <main> tid=0x1] Locked disk store SQLF-DD-DISKSTORE for exclusive access in directory: ./datadictionary

[info 2013/12/15 23:05:57.843 EST  <main> tid=0x1] Recovered disk store SQLF-DD-DISKSTORE with unique id 58259a3b-d3e5-4211-a72d-9d613f0d6cf3

[info 2013/12/15 23:05:57.843 EST  <main> tid=0x1] Recovering oplog#1 /home/gpadmin/workspace/SFBootStrap/./datadictionary/BACKUPSQLF-DD-DISKSTORE_1.drf for disk store SQLF-DD-DISKSTORE.

[info 2013/12/15 23:05:57.843 EST  <main> tid=0x1] Recovering oplog#1 /home/gpadmin/workspace/SFBootStrap/./datadictionary/BACKUPSQLF-DD-DISKSTORE_1.krf for disk store SQLF-DD-DISKSTORE.

[info 2013/12/15 23:05:57.844 EST  <main> tid=0x1] recovery oplog load took 1 ms

[info 2013/12/15 23:05:57.845 EST  <main> tid=0x1] Created oplog#2 drf for disk store SQLF-DD-DISKSTORE.

[info 2013/12/15 23:05:57.845 EST  <main> tid=0x1] Created oplog#2 crf for disk store SQLF-DD-DISKSTORE.

[info 2013/12/15 23:05:57.845 EST  <main> tid=0x1] recovery region initialization took 0 ms

[info 2013/12/15 23:05:57.859 EST  <main> tid=0x1] Initializing region _DDL_STMTS_META_REGION

[info 2013/12/15 23:05:57.861 EST  <main> tid=0x1] Region /_DDL_STMTS_META_REGION recovered from the local disk. Old persistent ID: /172.16.48.164:/home/gpadmin/workspace/SFBootStrap/./datadictionary created at timestamp 1386952986777 version 0 diskStoreId 58259a3b-d3e5-4211-a72d-9d613f0d6cf3 name , new persistent ID /172.16.48.166:/home/gpadmin/workspace/SFBootStrap/./datadictionary created at timestamp 1387166757859 version 0 diskStoreId 58259a3b-d3e5-4211-a72d-9d613f0d6cf3 name 

[info 2013/12/15 23:05:57.893 EST  <main> tid=0x1] Initializing region __PR

[info 2013/12/15 23:05:57.917 EST  <main> tid=0x1] Partitioned Region /__IDENTITYREGION2 is born with prId=1 ident:#__IDENTITYREGION2

[info 2013/12/15 23:05:58.334 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,class_name,data_type,remarks,base_type/-2064822571] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CASE WHEN (SCHEMANAME IS NULL) THEN CAST (NULL AS VARCHAR(128)) ELSE SCHEMANAME END AS TYPE_SCHEM, ALIAS AS TYPE_NAME, JAVACLASSNAME AS CLASS_NAME, 2000 AS DATA_TYPE, CAST (NULL AS VARCHAR(128)) AS REMARKS, CAST (NULL AS SMALLINT) AS BASE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE (ALIASTYPE='A') 	AND (SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND ((1=1) OR ? IS NOT NULL) AND (SCHEMANAME LIKE ?) AND (ALIAS LIKE ?) AND (CAST (java.sql.Types::JAVA_OBJECT AS INTEGER) IN (?)) ORDER BY DATA_TYPE, TYPE_SCHEM, TYPE_NAME] schema=SYS

[info 2013/12/15 23:05:58.335 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,class_name,data_type,remarks,base_type/-2064822571

[info 2013/12/15 23:05:58.462 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/1119047940] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, CAST( P.GRANTOR AS VARCHAR(128)) AS GRANTOR, CAST( P.GRANTEE AS VARCHAR(128)) AS GRANTEE, X.PRIV AS PRIVILEGE, X.GRANTABLE AS IS_GRANTABLE FROM SYS.SYSTABLEPERMS P, SYS.SYSTABLES T, SYS.SYSSCHEMAS S, (VALUES (CAST('SELECT' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('SELECT' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('DELETE' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('DELETE' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('INSERT' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('INSERT' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('UPDATE' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('UPDATE' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('REFERENCES' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('REFERENCES' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128))), (CAST('TRIGGER' AS VARCHAR(128)), CAST('NO'  AS VARCHAR(128))), (CAST('TRIGGER' AS VARCHAR(128)), CAST('YES'  AS VARCHAR(128)))) AS X(PRIV,GRANTABLE) WHERE P.TABLEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?)  AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ((P.SELECTPRIV = 'y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'NO') OR (P.SELECTPRIV = 'Y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'YES') OR (P.SELECTPRIV = 'y' AND X.PRIV = 'SELECT' AND X.GRANTABLE = 'NO') OR (P.DELETEPRIV = 'Y' AND X.PRIV = 'DELETE' AND X.GRANTABLE = 'YES') OR (P.DELETEPRIV = 'y' AND X.PRIV = 'DELETE' AND X.GRANTABLE = 'NO') OR (P.INSERTPRIV = 'Y' AND X.PRIV = 'INSERT' AND X.GRANTABLE = 'YES') OR (P.INSERTPRIV = 'y' AND X.PRIV = 'INSERT' AND X.GRANTABLE = 'NO') OR (P.UPDATEPRIV = 'Y' AND X.PRIV = 'UPDATE' AND X.GRANTABLE = 'YES') OR (P.UPDATEPRIV = 'y' AND X.PRIV = 'UPDATE' AND X.GRANTABLE = 'NO') OR (P.REFERENCESPRIV = 'Y' AND X.PRIV = 'REFERENCES' AND X.GRANTABLE = 'YES') OR (P.REFERENCESPRIV = 'y' AND X.PRIV = 'REFERENCES' AND X.GRANTABLE = 'NO') OR (P.TRIGGERPRIV = 'Y' AND X.PRIV = 'TRIGGER' AND X.GRANTABLE = 'YES') OR (P.TRIGGERPRIV = 'y' AND X.PRIV = 'TRIGGER' AND X.GRANTABLE = 'NO')) ORDER BY TABLE_SCHEM, TABLE_NAME, PRIVILEGE] schema=SYS

[info 2013/12/15 23:05:58.462 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/1119047940

[info 2013/12/15 23:05:58.590 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/1609306632] for statement [SELECT JDBC_SUBQUERY.TABLE_CAT AS TABLE_CAT, JDBC_SUBQUERY.TABLE_SCHEM AS TABLE_SCHEM, JDBC_SUBQUERY.TABLE_NAME AS TABLE_NAME, CAST (JDBC_SUBQUERY.NON_UNIQUE AS SMALLINT) AS NON_UNIQUE, JDBC_SUBQUERY.INDEX_QUALIFIER AS INDEX_QUALIFIER, JDBC_SUBQUERY.INDEX_NAME AS INDEX_NAME, CAST (JDBC_SUBQUERY.TYPE AS SMALLINT) AS TYPE, JDBC_SUBQUERY.ORDINAL_POSITION AS ORDINAL_POSITION, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, JDBC_SUBQUERY.ASC_OR_DESC AS ASC_OR_DESC, JDBC_SUBQUERY.CARDINALITY AS CARDINALITY, JDBC_SUBQUERY.PAGES AS PAGES, JDBC_SUBQUERY.FILTER_CONDITION AS FILTER_CONDITION FROM ( SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, (CASE WHEN CONGLOMS.DESCRIPTOR.isUnique() THEN FALSE ELSE TRUE END) AS NON_UNIQUE, CAST ('' AS VARCHAR(128)) AS INDEX_QUALIFIER, CONGLOMS.CONGLOMERATENAME AS INDEX_NAME, java.sql.DatabaseMetaData::tableIndexOther AS TYPE, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS ORDINAL_POSITION, COLS.COLUMNNAME AS COLUMN_NAME, CASE WHEN CONGLOMS.DESCRIPTOR.isAscending( CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER)) THEN 'A' ELSE 'D' END AS ASC_OR_DESC, CAST(NULL AS INT) AS CARDINALITY, CAST(NULL AS INT) AS PAGES, CAST(NULL AS VARCHAR(128)) AS FILTER_CONDITION FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE T.TABLEID = CONGLOMS.TABLEID AND T.TABLEID = COLS.REFERENCEID AND T.SCHEMAID = S.SCHEMAID AND CONGLOMS.ISINDEX AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=?  AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ( CASE WHEN ? THEN CONGLOMS.DESCRIPTOR.isUnique() ELSE (1=1) END) AND ((1=1) OR ?<>0) ) JDBC_SUBQUERY ORDER BY NON_UNIQUE, TYPE, INDEX_NAME, ORDINAL_POSITION] schema=SYS

[info 2013/12/15 23:05:58.591 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/1609306632

[info 2013/12/15 23:05:58.727 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/1757333869] for statement [SELECT JDBC_SUBQUERY.TABLE_CAT AS TABLE_CAT, JDBC_SUBQUERY.TABLE_SCHEM AS TABLE_SCHEM, JDBC_SUBQUERY.TABLE_NAME AS TABLE_NAME, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS SMALLINT) AS DECIMAL_DIGITS, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS SMALLINT) AS NUM_PREC_RADIX, CAST (JDBC_SUBQUERY.NULLABLE AS SMALLINT) AS NULLABLE, JDBC_SUBQUERY.REMARKS AS REMARKS, JDBC_SUBQUERY.COLUMN_DEF AS COLUMN_DEF, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH, JDBC_SUBQUERY.ORDINAL_POSITION AS ORDINAL_POSITION, JDBC_SUBQUERY.IS_NULLABLE AS IS_NULLABLE, JDBC_SUBQUERY.SCOPE_CATLOG AS SCOPE_CATLOG, JDBC_SUBQUERY.SCOPE_SCHEMA AS SCOPE_SCHEMA, JDBC_SUBQUERY.SCOPE_TABLE AS SCOPE_TABLE, JDBC_SUBQUERY.SOURCE_DATA_TYPE AS SOURCE_DATA_TYPE, JDBC_SUBQUERY.IS_AUTOINCREMENT AS IS_AUTOINCREMENT FROM ( SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || (CAST (RTRIM(CAST(AUTOINCREMENTSTART AS CHAR(12))) AS VARCHAR(12))) || ' increment ' || (CAST (RTRIM(CAST(AUTOINCREMENTINC AS CHAR(12))) AS VARCHAR(12))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT, C.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) ) JDBC_SUBQUERY ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION] schema=SYS

[info 2013/12/15 23:05:58.727 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/1757333869

[info 2013/12/15 23:05:59.221 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1294922006] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() )] schema=SYS

[info 2013/12/15 23:05:59.221 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1294922006

[info 2013/12/15 23:05:59.370 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/352652448] for statement [SELECT JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.LITERAL_PREFIX AS LITERAL_PREFIX, JDBC_SUBQUERY.LITERAL_SUFFIX AS LITERAL_SUFFIX, JDBC_SUBQUERY.CREATE_PARAMS AS CREATE_PARAMS, JDBC_SUBQUERY.NULLABLE AS NULLABLE, CAST (JDBC_SUBQUERY.CASE_SENSITIVE AS SMALLINT) AS CASE_SENSITIVE, JDBC_SUBQUERY.SEARCHABLE AS SEARCHABLE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN JDBC_SUBQUERY.UNSIGNED_ATTRIBUTE ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS UNSIGNED_ATTRIBUTE, CAST (JDBC_SUBQUERY.FIXED_PREC_SCALE AS SMALLINT) AS FIXED_PREC_SCALE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN JDBC_SUBQUERY.AUTO_UNIQUE_VAL ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS AUTO_UNIQUE_VAL, JDBC_SUBQUERY.LOCAL_TYPE_NAME AS LOCAL_TYPE_NAME, JDBC_SUBQUERY.MINIMUM_SCALE AS MINIMUM_SCALE, JDBC_SUBQUERY.MAXIMUM_SCALE AS MAXIMUM_SCALE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS NUM_PREC_RADIX, CAST (NULL AS SMALLINT) AS INTERVAL_PRECISION FROM ( SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, T2 AS DATA_TYPE, T3 AS COLUMN_SIZE, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, T8 AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, T10 AS UNSIGNED_ATTRIBUTE, T11 AS FIXED_PREC_SCALE, T12 AS AUTO_UNIQUE_VAL, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (NULL AS INT) AS SQL_DATA_TYPE, CAST (NULL AS INT) AS SQL_DATETIME_SUB, T18 AS NUM_PREC_RADIX FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18) ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:05:59.370 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/352652448

[info 2013/12/15 23:05:59.444 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/1898671812] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS,  SYS.SYSCOLUMNS COLS  WHERE COLS.REFERENCEID = TABS.TABLEID  AND TABS.SCHEMAID = SCHEMAS.SCHEMAID  AND ((1=1) OR ? IS NOT NULL)  AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ? BETWEEN 0 AND 2  AND (?<>0 OR NOT COLS.COLUMNDATATYPE.isNullable()) ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:05:59.445 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/1898671812

[info 2013/12/15 23:05:59.479 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type,specific_name/-1082778297] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS RESERVED1, CAST (NULL AS INT) AS RESERVED2, CAST (NULL AS INT) AS RESERVED3, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE, SPECIFICNAME AS SPECIFIC_NAME FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, SPECIFIC_NAME] schema=SYS

[info 2013/12/15 23:05:59.480 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type,specific_name/-1082778297

[info 2013/12/15 23:05:59.531 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,method_id,parameter_id__V/-567768339] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, A.ALIAS AS PROCEDURE_NAME, V."COLUMN_NAME" AS COLUMN_NAME, V."COLUMN_TYPE" AS COLUMN_TYPE, V."DATA_TYPE" AS DATA_TYPE, V."TYPE_NAME" AS TYPE_NAME, V."PRECISION" AS PRECISION, V."LENGTH" AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE" AS NULLABLE, V."REMARKS" AS REMARKS, V."METHOD_ID" AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE ALIASTYPE = 'P' AND SCHEMANAME LIKE ? AND A.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2013/12/15 23:05:59.531 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,method_id,parameter_id__V/-567768339

[info 2013/12/15 23:06:00.126 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_constraintid,numcols__SYS.SYSCONSTRAINTS/68200219] for statement [SELECT CONS.CONSTRAINTID, IDX.DESCRIPTOR.numberOfOrderedColumns() AS NUMCOLS FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES IDX WHERE TABS.TABLEID = conS.TABLEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND IDX.DESCRIPTOR IS NOT NULL AND KEYS.CONGLOMERATEID = IDX.CONGLOMERATEID AND IDX.ISCONSTRAINT AND conS.type = 'U' AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?) AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' ORDER BY NUMCOLS] schema=SYS

[info 2013/12/15 23:06:00.126 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_constraintid,numcols__SYS.SYSCONSTRAINTS/68200219

[info 2013/12/15 23:06:00.176 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-2016242488] for statement [SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE FROM ( VALUES (CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128))) ) AS COLUMNPRIVILEGES ( TABLE_CAT, TABLE_SCHEM, TABLE_NAME, COLUMN_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=? OR ''=?)] schema=SYS

[info 2013/12/15 23:06:00.182 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-2016242488

[info 2013/12/15 23:06:00.338 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,precision,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_increment,local_type_name,minimum/1483303549] for statement [SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, T2 AS DATA_TYPE, T3 AS PRECISION, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, T8 AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, T10 AS UNSIGNED_ATTRIBUTE, T11 AS FIXED_PREC_SCALE, T12 AS AUTO_INCREMENT, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (NULL AS INT) AS SQL_DATA_TYPE, CAST (NULL AS INT) AS SQL_DATETIME_SUB, T18 AS NUM_PREC_RADIX FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18)] schema=SYS

[info 2013/12/15 23:06:00.343 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,precision,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_increment,local_type_name,minimum/1483303549

[info 2013/12/15 23:06:00.402 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/-1970896888] for statement [SELECT TABLE_CAT, TABLE_SCHEM, TABLE_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE FROM ( VALUES (CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128)), CAST ('' AS VARCHAR(128))) ) AS TABLEPRIVILEGES (TABLE_CAT, TABLE_SCHEM, TABLE_NAME, GRANTOR, GRANTEE, PRIVILEGE, IS_GRANTABLE ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?) ORDER BY TABLE_SCHEM, TABLE_NAME, PRIVILEGE] schema=SYS

[info 2013/12/15 23:06:00.410 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,grantor,grantee,privilege,is_grantable/-1970896888

[info 2013/12/15 23:06:00.416 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,supertable_name__SYSIBM.SYSDUMMY1/1862709106] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TABLE_CAT, CAST(NULL AS VARCHAR(128)) AS TABLE_SCHEM, VARCHAR('', 128) AS TABLE_NAME, VARCHAR('', 128) AS SUPERTABLE_NAME FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2013/12/15 23:06:00.420 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,supertable_name__SYSIBM.SYSDUMMY1/1862709106

[info 2013/12/15 23:06:00.509 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1186328419] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, S2.SCHEMANAME AS FKTABLE_SCHEM, T2.TABLENAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CAST (CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN F2.UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN F2.DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN F2.DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN F2.DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END)END)ENd)END)  AS SMALLINT) AS DELETE_RULE, C2.CONSTRAINTNAME AS FK_NAME, PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT C.CONSTRAINTID AS PK_ID, CONSTRAINTNAME AS PK_NAME, PKTB_SCHEMA AS PKTABLE_SCHEM,  PKTB_NAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS KEY_SEQ FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T.TABLEID AS PKTB_ID, S.SCHEMANAME AS PKTB_SCHEMA, T.TABLENAME AS PKTB_NAME FROM  SYS.SYSTABLES t --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS s --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=? AND S.SCHEMAID = T.SCHEMAID ) AS PKTB (PKTB_ID, PKTB_SCHEMA, PKTB_NAME), SYS.SYSCONSTRAINTS C --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE  PKTB.PKTB_ID = C.TABLEID AND K.CONSTRAINTID = C.CONSTRAINTID  AND PKTB.PKTB_ID = COLS.REFERENCEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ) AS PKINFO(PK_ID, PK_NAME, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, KEY_SEQ), SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1'  
, SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2'  
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1'  
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE  F2.keyCONSTRAINTID = PKINFO.PK_ID AND PKINFO.KEY_SEQ = CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(  COLS2.COLUMNNUMBER)  AND T2.TABLEID = C2.TABLEID AND ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME LIKE ? AND T2.TABLENAME NOT LIKE 'SYSXPLAIN%' AND S2.SCHEMAID = T2.SCHEMAID  AND F2.CONSTRAINTID = C2.CONSTRAINTID  AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID AND C2.TABLEID = COLS2.REFERENCEID ORDER BY FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FK_NAME, KEY_SEQ] schema=SYS

[info 2013/12/15 23:06:00.509 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1186328419

[info 2013/12/15 23:06:00.535 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-2071265857] for statement [SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM ( VALUES (SMALLINT(1), CAST ('' AS VARCHAR(128)), 1, CAST ('' AS VARCHAR(128)), 1, 1, SMALLINT(1), SMALLINT(1)) ) AS VERSIONCOLUMNS (SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?)] schema=SYS

[info 2013/12/15 23:06:00.535 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-2071265857

[info 2013/12/15 23:06:00.549 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,num_input_params,num_output_params,num_result_sets,remarks,procedure_type/128346607] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS NUM_INPUT_PARAMS, CAST (NULL AS INT) AS NUM_OUTPUT_PARAMS, CAST (NULL AS INT) AS NUM_RESULT_SETS, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY 2,3] schema=SYS

[info 2013/12/15 23:06:00.549 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,num_input_params,num_output_params,num_result_sets,remarks,procedure_type/128346607

[info 2013/12/15 23:06:00.569 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_schem,table_catalog__SYS.SYSSCHEMAS/2115719063] for statement [SELECT SCHEMANAME AS TABLE_SCHEM, CAST(NULL AS VARCHAR(128)) AS TABLE_CATALOG FROM SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND SCHEMANAME LIKE ? ORDER BY TABLE_SCHEM] schema=SYS

[info 2013/12/15 23:06:00.569 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_schem,table_catalog__SYS.SYSSCHEMAS/2115719063

[info 2013/12/15 23:06:00.610 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-910606525] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, S2.SCHEMANAME AS FKTABLE_SCHEM, T2.TABLENAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CAST (CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN F2.UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN F2.DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN F2.DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN F2.DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN F2.DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END)END)ENd)END)  AS SMALLINT) AS DELETE_RULE, C2.CONSTRAINTNAME AS FK_NAME, PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT C.CONSTRAINTID AS PK_ID, CONSTRAINTNAME AS PK_NAME, PKTB_SCHEMA AS PKTABLE_SCHEM,  PKTB_NAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS KEY_SEQ FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T.TABLEID AS PKTB_ID, S.SCHEMANAME AS PKTB_SCHEMA, T.TABLENAME AS PKTB_NAME FROM  SYS.SYSTABLES t --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS s --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME LIKE ? AND S.SCHEMAID = T.SCHEMAID ) AS PKTB (PKTB_ID, PKTB_SCHEMA, PKTB_NAME), SYS.SYSCONSTRAINTS C --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE  PKTB.PKTB_ID = C.TABLEID AND K.CONSTRAINTID = C.CONSTRAINTID  AND PKTB.PKTB_ID = COLS.REFERENCEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ) AS PKINFO(PK_ID, PK_NAME, PKTABLE_SCHEM, PKTABLE_NAME, PKCOLUMN_NAME, KEY_SEQ), SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1'  
, SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2'  
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1'  
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE  F2.keyCONSTRAINTID = PKINFO.PK_ID AND PKINFO.KEY_SEQ = CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(  COLS2.COLUMNNUMBER)  AND T2.TABLEID = C2.TABLEID AND ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME LIKE ? AND T2.TABLENAME NOT LIKE 'SYSXPLAIN%' AND S2.SCHEMAID = T2.SCHEMAID  AND F2.CONSTRAINTID = C2.CONSTRAINTID  AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition(COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID AND C2.TABLEID = COLS2.REFERENCEID ORDER BY FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FK_NAME, KEY_SEQ] schema=SYS

[info 2013/12/15 23:06:00.610 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-910606525

[info 2013/12/15 23:06:00.638 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/685411790] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.BUFFER_LENGTH AS BUFFER_LENGTH, JDBC_SUBQUERY.DECIMAL_DIGITS AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM ( VALUES (SMALLINT(1), CAST ('' AS VARCHAR(128)), 1, CAST ('' AS VARCHAR(128)), 1, 1, SMALLINT(1), SMALLINT(1)) ) AS VERSIONCOLUMNS (SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN ) WHERE (1=0) AND (((1=1) OR ? IS NOT NULL) OR ''=? OR ''=?) ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:06:00.638 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/685411790

[info 2013/12/15 23:06:00.691 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_function_cat,function_schem,function_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,char_octet_length,ordinal_position,is_nullable,spec/-1326417381] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS FUNCTION_CAT, S.SCHEMANAME       AS FUNCTION_SCHEM, A.ALIAS            AS FUNCTION_NAME, V."COLUMN_NAME"    AS COLUMN_NAME, V."COLUMN_TYPE"    AS COLUMN_TYPE, V."DATA_TYPE"      AS DATA_TYPE, V."TYPE_NAME"      AS TYPE_NAME, V."PRECISION"      AS PRECISION, V."LENGTH"         AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE"          AS NULLABLE, V."REMARKS"           AS REMARKS, CASE WHEN (V."DATA_TYPE" IN ( java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN V."LENGTH" ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH, CASE WHEN (V."COLUMN_TYPE" = 5) THEN CAST((V."PARAMETER_ID" + 1 - V."METHOD_ID") AS INT) ELSE CAST((V."PARAMETER_ID" + 1) AS INT) END AS ORDINAL_POSITION, CAST(( CASE WHEN V."NULLABLE" = java.sql.DatabaseMetaData::procedureNullable THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, A.SPECIFICNAME        AS SPECIFIC_NAME, V."METHOD_ID"         AS METHOD_ID, V."PARAMETER_ID"      AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS S, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE A.ALIASTYPE = 'F' AND S.SCHEMANAME LIKE ? AND A.SCHEMAID = S.SCHEMAID AND A.ALIAS LIKE ? AND (V."COLUMN_NAME" LIKE ?) ORDER BY FUNCTION_SCHEM, FUNCTION_NAME, SPECIFIC_NAME, PARAMETER_ID, ORDINAL_POSITION] schema=SYS

[info 2013/12/15 23:06:00.697 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_function_cat,function_schem,function_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,char_octet_length,ordinal_position,is_nullable,spec/-1326417381

[info 2013/12/15 23:06:00.730 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,attr_name,data_type,attr_type_name,attr_size,decimal_digits,num_prec_radix,nullable,remarks,attr_def,sql_data_type,sql_datetime_sub,char_octet_length,ord/1945291601] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TYPE_CAT, CAST(NULL AS VARCHAR(128)) AS TYPE_SCHEM, VARCHAR('', 128) AS TYPE_NAME, CAST(NULL AS VARCHAR(128)) AS ATTR_NAME, CAST(NULL AS INT) AS DATA_TYPE, CAST(NULL AS VARCHAR(128)) AS ATTR_TYPE_NAME, CAST(NULL AS INT) AS ATTR_SIZE, CAST(NULL AS INT) AS DECIMAL_DIGITS, CAST(NULL AS INT) AS NUM_PREC_RADIX, CAST(NULL AS INT) AS NULLABLE, CAST(NULL AS VARCHAR(128)) AS REMARKS, CAST(NULL AS VARCHAR(128)) AS ATTR_DEF, CAST(NULL AS INT) AS SQL_DATA_TYPE, CAST(NULL AS INT) AS SQL_DATETIME_SUB, CAST(NULL AS INT) AS CHAR_OCTET_LENGTH, CAST(NULL AS INT) AS ORDINAL_POSITION, CAST(NULL AS VARCHAR(128)) AS IS_NULLABLE, CAST(NULL AS VARCHAR(128)) AS SCOPE_CATALOG, CAST(NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST(NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST(NULL AS SMALLINT) AS SOURCE_DATA_TYPE FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2013/12/15 23:06:00.730 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,attr_name,data_type,attr_type_name,attr_size,decimal_digits,num_prec_radix,nullable,remarks,attr_def,sql_data_type,sql_datetime_sub,char_octet_length,ord/1945291601

[info 2013/12/15 23:06:00.754 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_function_cat,function_schem,function_name,remarks,function_type,specific_name/-1921152528] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS FUNCTION_CAT, SYS.SYSSCHEMAS.SCHEMANAME AS FUNCTION_SCHEM, SYS.SYSALIASES.ALIAS AS FUNCTION_NAME, CAST ((SYS.SYSALIASES.JAVACLASSNAME || '.' || SYS.SYSALIASES.ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CASE WHEN (SYS.SYSALIASES.ALIASINFO->isTableFunction())THEN CAST (2 AS SMALLINT)ELSE CAST (1 AS SMALLINT) END AS FUNCTION_TYPE, SYS.SYSALIASES.SPECIFICNAME AS SPECIFIC_NAME FROM SYS.SYSSCHEMAS, SYS.SYSALIASES WHERE SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND SYS.SYSALIASES.ALIASTYPE = 'F' AND ((1=1) OR ? IS NOT NULL) AND SYS.SYSSCHEMAS.SCHEMANAME LIKE ? AND SYS.SYSALIASES.ALIAS LIKE ? ORDER BY FUNCTION_SCHEM, FUNCTION_NAME, SPECIFIC_NAME] schema=SYS

[info 2013/12/15 23:06:00.760 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_function_cat,function_schem,function_name,remarks,function_type,specific_name/-1921152528

[info 2013/12/15 23:06:00.808 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,table_type,remarks,type_cat,type_schem,type_name,self_referencing_col_name,ref_generation/469368088] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, SCHEMANAME AS TABLE_SCHEM,  TABLENAME AS TABLE_NAME, (CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12))) AS TABLE_TYPE, CAST ('' AS VARCHAR(128)) AS REMARKS, CAST (NULL AS VARCHAR(128)) AS TYPE_CAT, CAST (NULL AS VARCHAR(128)) AS TYPE_SCHEM, CAST (NULL AS VARCHAR(128)) AS TYPE_NAME, CAST (NULL AS VARCHAR(128)) AS SELF_REFERENCING_COL_NAME, CAST (NULL AS VARCHAR(128)) AS REF_GENERATION FROM SYS.SYSTABLES, SYS.SYSSCHEMAS, (VALUES ('T','TABLE'), ('S','SYSTEM TABLE'), ('V', 'VIEW'), ('A', 'SYNONYM')) T(TTABBREV,TABLE_TYPE) WHERE (TTABBREV=TABLETYPE 	AND (SYS.SYSTABLES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID) AND ((1=1) OR ? IS NOT NULL) AND (SYS.SYSSCHEMAS.SCHEMANAME LIKE ?) AND (TABLENAME LIKE ?) AND (TABLENAME NOT LIKE 'SYSXPLAIN%') AND TABLETYPE IN (?, ?, ?, ?)) ORDER BY TABLE_TYPE, TABLE_SCHEM, TABLE_NAME] schema=SYS

[info 2013/12/15 23:06:00.808 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,table_type,remarks,type_cat,type_schem,type_name,self_referencing_col_name,ref_generation/469368088

[info 2013/12/15 23:06:00.841 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_name,max_len,default_value,description__SYSIBM.SYSDUMMY1/587800618] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS NAME, CAST(NULL AS INT) AS MAX_LEN, CAST(NULL AS VARCHAR(128)) AS DEFAULT_VALUE, CAST(NULL AS VARCHAR(128)) AS DESCRIPTION FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2013/12/15 23:06:00.842 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_name,max_len,default_value,description__SYSIBM.SYSDUMMY1/587800618

[info 2013/12/15 23:06:00.879 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-1978440259] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS,  SYS.SYSCOLUMNS COLS  WHERE COLS.REFERENCEID = TABS.TABLEID  AND TABS.SCHEMAID = SCHEMAS.SCHEMAID  AND ((1=1) OR ? IS NOT NULL)  AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ? BETWEEN 0 AND 2  AND (?<>0 OR NOT COLS.COLUMNDATATYPE.isNullable())] schema=SYS

[info 2013/12/15 23:06:00.880 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-1978440259

[info 2013/12/15 23:06:00.964 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,char_o/-460808413] for statement [SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, S.SCHEMANAME                AS PROCEDURE_SCHEM, A.ALIAS                     AS PROCEDURE_NAME, V."COLUMN_NAME"             AS COLUMN_NAME, V."COLUMN_TYPE"             AS COLUMN_TYPE, V."DATA_TYPE"               AS DATA_TYPE, V."TYPE_NAME"               AS TYPE_NAME, V."PRECISION"               AS PRECISION, V."LENGTH"                  AS LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS SCALE, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS RADIX, V."NULLABLE"                AS NULLABLE, V."REMARKS"                 AS REMARKS, CAST (NULL AS VARCHAR(254)) AS COLUMN_DEF, CAST (NULL AS INTEGER)      AS SQL_DATA_TYPE, CAST (NULL AS INTEGER)      AS SQL_DATETIME_SUB, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN V."LENGTH" ELSE CAST (NULL AS INTEGER) END AS CHAR_OCTET_LENGTH, CAST ((V."PARAMETER_ID" + 1) AS INT) AS ORDINAL_POSITION, CAST ((CASE WHEN (V."NULLABLE" IN (java.sql.DatabaseMetaData::procedureNullable)) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, A.SPECIFICNAME   AS SPECIFIC_NAME, V."METHOD_ID"    AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS S, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE A.ALIASTYPE = 'P' AND S.SCHEMANAME LIKE ? AND A.SCHEMAID = S.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, SPECIFIC_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2013/12/15 23:06:00.964 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,precision,length,scale,radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,char_o/-460808413

[info 2013/12/15 23:06:00.984 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-587243770] for statement [SELECT SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN FROM (VALUES (CAST (2  AS SMALLINT), CAST ('' AS VARCHAR(128)), 0, CAST ('INT' AS VARCHAR(128)), 0, 0,	CAST (0 AS SMALLINT), CAST (0 AS SMALLINT)) ) AS BESTROWIDENTIFIER( SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, COLUMN_SIZE, BUFFER_LENGTH, DECIMAL_DIGITS, PSEUDO_COLUMN) WHERE (1=0)] schema=SYS

[info 2013/12/15 23:06:00.984 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column/-587243770

[info 2013/12/15 23:06:01.021 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_constraintid__SYS.SYSCONSTRAINTS,SYS.SYSKEYS/2042198736] for statement [SELECT conS.CONSTRAINTID 	FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys WHERE TABS.TABLEID = conS.TABLEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND conS.type = 'P' AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?)  AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%'] schema=SYS

[info 2013/12/15 23:06:01.021 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_constraintid__SYS.SYSCONSTRAINTS,SYS.SYSKEYS/2042198736

[info 2013/12/15 23:06:01.086 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-658592416] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = COLS.REFERENCEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' and SCHEMAS.SCHEMAID = TABS.SCHEMAID AND TABS.TABLEID = IDX.TABLEID and IDX.CONGLOMERATENUMBER = ? AND (CASE WHEN IDX.DESCRIPTOR IS NOT NULL THEN IDX.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() ) ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:06:01.086 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-658592416

[info 2013/12/15 23:06:01.179 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-998393548] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, CAST( P.GRANTOR AS VARCHAR(128)) AS GRANTOR, CAST( P.GRANTEE AS VARCHAR(128)) AS GRANTEE, CASE WHEN (P.TYPE = 's' OR P.TYPE = 'S') THEN CAST( 'SELECT' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'd' OR P.TYPE = 'D') THEN CAST( 'DELETE' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'i' OR P.TYPE = 'I') THEN CAST( 'INSERT' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'u' OR P.TYPE = 'U') THEN CAST( 'UPDATE' AS VARCHAR(128)) ELSE CASE WHEN (P.TYPE = 'r' OR P.TYPE = 'R') THEN CAST( 'REFERENCES' AS VARCHAR(128)) ELSE CAST( 'TRIGGER' AS VARCHAR(128)) END END END END END AS PRIVILEGE, CASE WHEN (P.TYPE = 's' OR P.TYPE = 'd' OR P.TYPE = 'i' OR P.TYPE = 'u' OR P.TYPE = 'r' OR P.TYPE = 't') THEN CAST( 'NO' AS VARCHAR(128)) ELSE CAST( 'YES' AS VARCHAR(128)) END AS IS_GRANTABLE FROM SYS.SYSCOLPERMS P, SYS.SYSCOLUMNS C, SYS.SYSTABLES T, SYS.SYSSCHEMAS S WHERE P.TABLEID = T.TABLEID AND C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?)  AND (T.TABLENAME=?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) AND P.COLUMNS.isSet( C.COLUMNNUMBER - 1) ORDER BY COLUMN_NAME, PRIVILEGE] schema=SYS

[info 2013/12/15 23:06:01.184 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,grantor,grantee,privilege,is_grantable/-998393548

[info 2013/12/15 23:06:01.204 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_type/1717305902] for statement [SELECT CAST (RTRIM(TABLE_TYPE) AS VARCHAR(12)) AS TABLE_TYPE FROM (VALUES 'SYNONYM', 'SYSTEM TABLE', 'TABLE', 'VIEW') TABLETYPES(TABLE_TYPE) ORDER BY TABLE_TYPE] schema=SYS

[info 2013/12/15 23:06:01.204 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_type/1717305902

[info 2013/12/15 23:06:01.227 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,key_seq,pk_name/-73300787] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, COLS.COLUMNNAME AS COLUMN_NAME, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CONS.CONSTRAINTNAME AS PK_NAME FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
 SYS.SYSTABLES T --SQLFIRE-PROPERTIES index='SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS S --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSSCHEMAS_INDEX1'  
, SYS.SYSCONSTRAINTS CONS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSCONSTRAINTS_INDEX3'  
, SYS.SYSKEYS KEYS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index ='SYSCOLUMNS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=? AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND T.SCHEMAID = S.SCHEMAID AND	T.TABLEID = COLS.REFERENCEID AND T.TABLEID = CONGLOMS.TABLEID AND CONS.TABLEID = T.TABLEID AND CONS.TYPE = 'P' AND CONS.CONSTRAINTID = KEYS.CONSTRAINTID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0 AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID ORDER BY COLUMN_NAME] schema=SYS

[info 2013/12/15 23:06:01.227 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,key_seq,pk_name/-73300787

[info 2013/12/15 23:06:01.298 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/-1307675697] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, C.COLUMNNAME AS COLUMN_NAME, C.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, (CAST (C.COLUMNDATATYPE.getTypeName() AS VARCHAR(128))) AS TYPE_NAME, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::REAL, java.sql.Types::DOUBLE,java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::FLOAT)) THEN C.COLUMNDATATYPE.getPrecision() ELSE C.COLUMNDATATYPE.getMaximumWidth() END AS COLUMN_SIZE, CAST( NULL AS INT) AS BUFFER_LENGTH, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::DECIMAL, 				java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN C.COLUMNDATATYPE.getScale() ELSE CAST(NULL AS INT) END AS DECIMAL_DIGITS, 											CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::REAL, 					java.sql.Types::DOUBLE, java.sql.Types::FLOAT)) THEN 2 ELSE (CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 10 ELSE CAST (NULL AS INTEGER) END) END AS NUM_PREC_RADIX, 											CASE WHEN C.COLUMNDATATYPE.isNullable() THEN java.sql.DatabaseMetaData::columnNullable ELSE java.sql.DatabaseMetaData::columnNoNulls END AS NULLABLE, CAST ('' AS VARCHAR(128)) AS REMARKS, CASE WHEN (COLUMNDEFAULT IS NULL) THEN  (CASE WHEN (AUTOINCREMENTINC is NULL) THEN  CAST (NULL AS VARCHAR(254)) ELSE 'AUTOINCREMENT: start ' || (CAST (RTRIM(CAST(AUTOINCREMENTSTART AS CHAR(12))) AS VARCHAR(12))) || ' increment ' || (CAST (RTRIM(CAST(AUTOINCREMENTINC AS CHAR(12))) AS VARCHAR(12))) END ) ELSE CAST (COLUMNDEFAULT AS VARCHAR(254)) END AS COLUMN_DEF, CAST( NULL AS INT) AS SQL_DATA_TYPE, CAST( NULL AS INT) AS SQL_DATETIME_SUB, CASE WHEN (C.COLUMNDATATYPE.getJDBCTypeId() IN (java.sql.Types::CHAR,	 				java.sql.Types::VARCHAR)) THEN (CASE WHEN (C.COLUMNDATATYPE.getMaximumWidth() * 2.0 > 2147483647) THEN 2147483647 ELSE (C.COLUMNDATATYPE.getMaximumWidth() * 2) END) ELSE CAST(NULL AS INT) END AS CHAR_OCTET_LENGTH,										C.COLUMNNUMBER AS ORDINAL_POSITION, CAST ((CASE WHEN C.COLUMNDATATYPE.isNullable() THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, CAST (NULL AS VARCHAR(128)) AS SCOPE_CATLOG, CAST (NULL AS VARCHAR(128)) AS SCOPE_SCHEMA, CAST (NULL AS VARCHAR(128)) AS SCOPE_TABLE, CAST (NULL AS SMALLINT) AS SOURCE_DATA_TYPE, CAST ((CASE WHEN (AUTOINCREMENTINC is not NULL) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_AUTOINCREMENT FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCOLUMNS C WHERE C.REFERENCEID = T.TABLEID AND S.SCHEMAID = T.SCHEMAID AND ((1=1) OR ? IS NOT NULL) AND (S.SCHEMANAME LIKE ?) AND (T.TABLENAME LIKE ?) AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND (C.COLUMNNAME LIKE ?) ORDER BY TABLE_SCHEM, TABLE_NAME, ORDINAL_POSITION] schema=SYS

[info 2013/12/15 23:06:01.298 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_type,sql_datetime_sub,cha/-1307675697

[info 2013/12/15 23:06:01.385 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/-402294602] for statement [SELECT CAST ('' AS VARCHAR(128)) AS TABLE_CAT, S.SCHEMANAME AS TABLE_SCHEM, T.TABLENAME AS TABLE_NAME, (CASE WHEN CONGLOMS.DESCRIPTOR.isUnique() THEN FALSE ELSE TRUE END) AS NON_UNIQUE, CAST ('' AS VARCHAR(128)) AS INDEX_QUALIFIER, CONGLOMS.CONGLOMERATENAME AS INDEX_NAME, java.sql.DatabaseMetaData::tableIndexOther AS TYPE, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) AS SMALLINT) AS ORDINAL_POSITION, COLS.COLUMNNAME AS COLUMN_NAME, CASE WHEN CONGLOMS.DESCRIPTOR.isAscending( CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER)) THEN 'A' ELSE 'D' END AS ASC_OR_DESC, CAST(NULL AS INT) AS CARDINALITY, CAST(NULL AS INT) AS PAGES, CAST(NULL AS VARCHAR(128)) AS FILTER_CONDITION FROM SYS.SYSSCHEMAS S, SYS.SYSTABLES T, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE T.TABLEID = CONGLOMS.TABLEID AND T.TABLEID = COLS.REFERENCEID AND T.SCHEMAID = S.SCHEMAID AND CONGLOMS.ISINDEX AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND ((1=1) OR ? IS NOT NULL) AND S.SCHEMANAME LIKE ? AND T.TABLENAME=?  AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND ( CASE WHEN ? THEN CONGLOMS.DESCRIPTOR.isUnique() ELSE (1=1) END) AND ((1=1) OR ?<>0) ORDER BY NON_UNIQUE, TYPE, INDEX_NAME, ORDINAL_POSITION] schema=SYS

[info 2013/12/15 23:06:01.385 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat,table_schem,table_name,non_unique,index_qualifier,index_name,type,ordinal_position,column_name,asc_or_desc,cardinality,pages,filter_condition/-402294602

[info 2013/12/15 23:06:01.452 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/1362568576] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0 ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:06:01.452 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/1362568576

[info 2013/12/15 23:06:01.467 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_cat,type_schem,type_name,supertype_cat,supertype_schem,supertype_name__SYSIBM.SYSDUMMY1/197965734] for statement [SELECT CAST(NULL AS VARCHAR(128)) AS TYPE_CAT, CAST(NULL AS VARCHAR(128)) AS TYPE_SCHEM, VARCHAR('', 128) AS TYPE_NAME, CAST(NULL AS VARCHAR(128)) AS SUPERTYPE_CAT, CAST(NULL AS VARCHAR(128)) AS SUPERTYPE_SCHEM, VARCHAR('', 128) AS SUPERTYPE_NAME FROM SYSIBM.SYSDUMMY1 WHERE 1=0 WITH UR] schema=SYS

[info 2013/12/15 23:06:01.467 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_cat,type_schem,type_name,supertype_cat,supertype_schem,supertype_name__SYSIBM.SYSDUMMY1/197965734

[info 2013/12/15 23:06:01.522 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/186574963] for statement [SELECT JDBC_SUBQUERY.SCOPE AS SCOPE, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.COL_MAX_WIDTH_IN_BYTES AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, JDBC_SUBQUERY.PSEUDO_COLUMN AS PSEUDO_COLUMN FROM ( SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN, COLS.COLUMNDATATYPE.getMaximumWidthInBytes() AS COL_MAX_WIDTH_IN_BYTES FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() ) ) JDBC_SUBQUERY] schema=SYS

[info 2013/12/15 23:06:01.523 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSTABLES,SYS.SYSSCHEMAS/186574963

[info 2013/12/15 23:06:01.999 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1634581889] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONSTRAINTS cons, SYS.SYSKEYS keys, SYS.SYSCONGLOMERATES CONGLOMS, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = conS.TABLEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' AND TABS.TABLEID = COLS.REFERENCEID AND SCHEMAS.SCHEMAID = TABS.SCHEMAID AND conS.CONSTRAINTID = ? AND KEYS.CONSTRAINTID = ? AND conS.CONSTRAINTID = KEYS.CONSTRAINTID AND TABS.TABLEID = CONGLOMS.TABLEID AND KEYS.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0] schema=SYS

[info 2013/12/15 23:06:01.999 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSSCHEMAS/1634581889

[info 2013/12/15 23:06:02.130 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/836363518] for statement [SELECT CAST (RTRIM(CAST (T1 AS CHAR(128))) AS VARCHAR(128)) AS TYPE_NAME, CAST(T2 AS SMALLINT) AS DATA_TYPE, T3 AS COLUMN_SIZE, CAST (RTRIM(CAST(T4 AS CHAR(10))) AS VARCHAR(10)) AS LITERAL_PREFIX, CAST (RTRIM(T5) AS VARCHAR(10)) AS LITERAL_SUFFIX, CAST (RTRIM(CAST(T6 AS CHAR(20))) AS VARCHAR(20)) AS CREATE_PARAMS, CAST (T7 AS SMALLINT) AS NULLABLE, CAST (T8 AS SMALLINT) AS CASE_SENSITIVE, CAST (T9 AS SMALLINT) AS SEARCHABLE, CAST (CASE WHEN (T10 IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN T10 ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS UNSIGNED_ATTRIBUTE, CAST (T11 AS SMALLINT) AS FIXED_PREC_SCALE, CAST (CASE WHEN (T12 IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN T12 ELSE CAST (NULL AS SMALLINT) END AS SMALLINT) AS AUTO_UNIQUE_VAL, CAST (RTRIM(CAST(T1 AS CHAR(128))) AS VARCHAR(128)) AS LOCAL_TYPE_NAME, CAST (T14 AS SMALLINT) AS MINIMUM_SCALE, CAST (T15 AS SMALLINT) AS MAXIMUM_SCALE, CAST (CASE WHEN (T2 IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE T2 END AS SMALLINT) AS SQL_DATA_TYPE, CAST (CASE WHEN (T2 = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (T2 = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (T2 = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (T2 IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE T18 END AS NUM_PREC_RADIX, CAST (NULL AS SMALLINT) AS INTERVAL_PRECISION FROM ( VALUES ('BIGINT',-5,19,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('LONG VARCHAR FOR BIT DATA',-4,32700,'X''','''',CAST (NULL AS CHAR), 1,FALSE,0,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('VARCHAR () FOR BIT DATA',-3,32672,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR () FOR BIT DATA',-2,254,'X''','''','length', 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('LONG VARCHAR',-1,32700,'''','''',CAST (NULL AS CHAR), 1,TRUE,1,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('CHAR',1,254,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('NUMERIC',2,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('DECIMAL',3,31,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision,scale', 1,FALSE,2,FALSE,TRUE,FALSE,0,31,10),('INTEGER',4,10,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('SMALLINT',5,5,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,TRUE,0,0,10),('FLOAT',6,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'precision', 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('REAL',7,23,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('DOUBLE',8,52,CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,FALSE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),2),('VARCHAR',12,32672,'''','''','length', 1,TRUE,3,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER), CAST (NULL AS INTEGER)), ('DATE',91,10,'DATE''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIME',92,8,'TIME''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,0,10),('TIMESTAMP',93,26,'TIMESTAMP''','''',CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,0,6,10),('OBJECT',2000,CAST (NULL AS INTEGER),CAST (NULL AS CHAR),CAST (NULL AS CHAR),CAST (NULL AS CHAR), 1,FALSE,2,TRUE,FALSE,FALSE,CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('BLOB',2004,2147483647,CAST (NULL AS CHAR),CAST (NULL AS CHAR),'length', 1,FALSE,0,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)),('CLOB',2005,2147483647,'''','''','length', 1,TRUE,1,CAST (NULL AS BOOLEAN),FALSE,CAST (NULL AS BOOLEAN), CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)), ('XML',2009,2147483647,'XMLPARSE (DOCUMENT ''',''' PRESERVE WHITESPACE)',CAST (NULL AS CHAR),1,TRUE,0,FALSE,FALSE,FALSE, CAST (NULL AS INTEGER),CAST (NULL AS INTEGER),CAST (NULL AS INTEGER)) ) AS TYPEINFO(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T14,T15,T18) WHERE T2 = ?] schema=SYS

[info 2013/12/15 23:06:02.131 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_type_name,data_type,column_size,literal_prefix,literal_suffix,create_params,nullable,case_sensitive,searchable,unsigned_attribute,fixed_prec_scale,auto_unique_val,local_type_name,mini/836363518

[info 2013/12/15 23:06:02.167 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type/-1423248225] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, ALIAS AS PROCEDURE_NAME, CAST (NULL AS INT) AS RESERVED1, CAST (NULL AS INT) AS RESERVED2, CAST (NULL AS INT) AS RESERVED3, CAST ((JAVACLASSNAME||'.'|| ALIASINFO->getMethodName()) AS VARCHAR(32672)) AS REMARKS, CAST (java.sql.DatabaseMetaData::procedureNoResult AS SMALLINT) AS PROCEDURE_TYPE FROM SYS.SYSALIASES, SYS.SYSSCHEMAS WHERE ((1=1) OR ? IS NOT NULL) AND (ALIASTYPE = 'P' AND SCHEMANAME LIKE ?) AND SYS.SYSALIASES.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND ALIAS LIKE ? ORDER BY 2,3] schema=SYS

[info 2013/12/15 23:06:02.167 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,reserved1,reserved2,reserved3,remarks,procedure_type/-1423248225

[info 2013/12/15 23:06:02.178 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_table_cat/-1654662599] for statement [SELECT TABLE_CAT FROM ( VALUES ('') ) AS CATALOGS(TABLE_CAT) WHERE (1=0)] schema=SYS

[info 2013/12/15 23:06:02.178 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_table_cat/-1654662599

[info 2013/12/15 23:06:02.224 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1535943477] for statement [SELECT CAST ('' AS VARCHAR(128)) AS PKTABLE_CAT, S.SCHEMANAME AS PKTABLE_SCHEM, TABLENAME AS PKTABLE_NAME, COLS.COLUMNNAME AS PKCOLUMN_NAME, CAST ('' AS VARCHAR(128)) AS FKTABLE_CAT, FKTABLE_SCHEM, FKTABLE_NAME, FKCOLUMN_NAME, CAST (CONGLOMS.DESCRIPTOR.getKeyColumnPosition( COLS.COLUMNNUMBER) AS SMALLINT) AS KEY_SEQ, CAST ((CASE WHEN FK_UPDATERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN FK_UPDATERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END)  AS SMALLINT) AS UPDATE_RULE, CAST ((CASE WHEN FK_DELETERULE='S' THEN java.sql.DatabaseMetaData::importedKeyRestrict ELSE  (CASE WHEN FK_DELETERULE='R' THEN java.sql.DatabaseMetaData::importedKeyNoAction ELSE (CASE WHEN FK_DELETERULE='C' THEN java.sql.DatabaseMetaData::importedKeyCascade ELSE (CASE WHEN FK_DELETERULE='U' THEN java.sql.DatabaseMetaData::importedKeySetNull ELSE java.sql.DatabaseMetaData::importedKeyNoAction END) END) END) END)  AS SMALLINT) AS DELETE_RULE, FK_NAME, CONSTRAINTNAME AS PK_NAME, CAST (java.sql.DatabaseMetaData::importedKeyNotDeferrable AS SMALLINT) AS DEFERRABILITY FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT F2.keyCONSTRAINTID AS FK_ID, FKTB_SCHEMA AS FKTABLE_SCHEM, FKTB_NAME AS FKTABLE_NAME, COLS2.COLUMNNAME AS FKCOLUMN_NAME, CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) AS KEY_SEQ, C2.CONSTRAINTNAME AS FK_NAME, F2.DELETERULE AS FK_UPDATERULE, F2.DELETERULE AS FK_DELETERULE FROM --SQLFIRE-PROPERTIES joinOrder=FIXED 
(SELECT T2.TABLEID AS FKTB_ID, S2.SCHEMANAME AS FKTB_SCHEMA, T2.TABLENAME AS FKTB_NAME FROM  SYS.SYSTABLES T2 --SQLFIRE-PROPERTIES index = 'SYSTABLES_INDEX1' 
, SYS.SYSSCHEMAS S2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX1' 
WHERE ((1=1) OR ? IS NOT NULL) AND S2.SCHEMANAME LIKE ? AND T2.TABLENAME=? AND S2.SCHEMAID = T2.SCHEMAID ) AS FKTB (FKTB_ID, FKTB_SCHEMA, FKTB_NAME), SYS.SYSCONSTRAINTS c2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX3' 
, SYS.SYSFOREIGNKEYS F2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSFOREIGNKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS2 --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index =  'SYSCOLUMNS_INDEX1' 
WHERE FKTB.FKTB_ID = C2.TABLEID AND F2.CONSTRAINTID = C2.CONSTRAINTID AND FKTB.FKTB_ID = COLS2.REFERENCEID AND (CASE WHEN CONGLOMS2.DESCRIPTOR IS NOT NULL THEN CONGLOMS2.DESCRIPTOR.getKeyColumnPosition( COLS2.COLUMNNUMBER) ELSE 0 END) <> 0 AND F2.CONGLOMERATEID = CONGLOMS2.CONGLOMERATEID ) AS FKINFO(FK_ID, FKTABLE_SCHEM, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, FK_NAME, FK_UPDATERULE, FK_DELETERULE), SYS.SYSCONSTRAINTS c --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCONSTRAINTS_INDEX1' 
, SYS.SYSTABLES T --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSTABLES_INDEX2' 
, SYS.SYSSCHEMAS S --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSSCHEMAS_INDEX2' 
, SYS.SYSKEYS K --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSKEYS_INDEX1' 
, SYS.SYSCONGLOMERATES CONGLOMS --SQLFIRE-PROPERTIES joinStrategy = NESTEDLOOP, index = 'SYSCONGLOMERATES_INDEX1' 
, SYS.SYSCOLUMNS COLS --SQLFIRE-PROPERTIES joinStrategy=NESTEDLOOP, index = 'SYSCOLUMNS_INDEX1' 
WHERE T.TABLEID = C.TABLEID AND T.TABLENAME NOT LIKE 'SYSXPLAIN%' AND C.CONSTRAINTID = FKINFO.FK_ID  AND FKINFO.KEY_SEQ = CONGLOMS.DESCRIPTOR.getKeyColumnPosition(  COLS.COLUMNNUMBER) AND S.SCHEMAID = T.SCHEMAID AND K.CONSTRAINTID = C.CONSTRAINTID AND (CASE WHEN CONGLOMS.DESCRIPTOR IS NOT NULL THEN CONGLOMS.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) <> 0  AND K.CONGLOMERATEID = CONGLOMS.CONGLOMERATEID  AND C.TABLEID = COLS.REFERENCEID  ORDER BY PKTABLE_CAT,  PKTABLE_SCHEM, PKTABLE_NAME, PK_NAME, KEY_SEQ] schema=SYS

[info 2013/12/15 23:06:02.224 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_pktable_cat,pktable_schem,pktable_name,pkcolumn_name,fktable_cat,fktable_schem,fktable_name,fkcolumn_name,key_seq,update_rule,delete_rule,fk_name,pk_name,deferrability/-1535943477

[info 2013/12/15 23:06:02.273 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_conglomeratenumber,numcols/-11512973] for statement [SELECT IDX.CONGLOMERATENUMBER, IDX.DESCRIPTOR.numberOfOrderedColumns() AS NUMCOLS FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX WHERE SCHEMAS.SCHEMAID = TABS.SCHEMAID and not IDX.ISCONSTRAINT AND TABS.TABLEID = IDX.TABLEID  AND (CASE WHEN IDX.DESCRIPTOR IS NULL THEN (1=0) ELSE IDX.DESCRIPTOR.isUnique() END)  AND ((1=1) OR ? IS NOT NULL) AND (SCHEMAS.SCHEMANAME LIKE ?) AND (TABS.TABLENAME=?) AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' ORDER BY NUMCOLS] schema=SYS

[info 2013/12/15 23:06:02.273 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_conglomeratenumber,numcols/-11512973

[info 2013/12/15 23:06:02.336 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-1370252503] for statement [SELECT CAST (java.sql.DatabaseMetaData::bestRowSession AS SMALLINT) AS SCOPE, COLS.COLUMNNAME AS COLUMN_NAME, COLS.COLUMNDATATYPE.getJDBCTypeId() AS DATA_TYPE, CAST (COLS.COLUMNDATATYPE.getTypeName() AS VARCHAR(128)) AS TYPE_NAME, COLS.COLUMNDATATYPE.getMaximumWidth() AS COLUMN_SIZE, CAST (NULL AS INT) AS BUFFER_LENGTH, CAST ((CASE WHEN (COLS.COLUMNDATATYPE.getJDBCTypeId() IN ( java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN COLS.COLUMNDATATYPE.getPrecision() ELSE CAST (NULL AS SMALLINT) END) AS SMALLINT) AS DECIMAL_DIGITS, CAST (java.sql.DatabaseMetaData::bestRowNotPseudo AS SMALLINT) AS PSEUDO_COLUMN FROM SYS.SYSSCHEMAS SCHEMAS, SYS.SYSTABLES TABS, SYS.SYSCONGLOMERATES IDX, SYS.SYSCOLUMNS COLS WHERE TABS.TABLEID = COLS.REFERENCEID AND TABS.TABLENAME NOT LIKE 'SYSXPLAIN%' and SCHEMAS.SCHEMAID = TABS.SCHEMAID AND TABS.TABLEID = IDX.TABLEID and IDX.CONGLOMERATENUMBER = ? AND (CASE WHEN IDX.DESCRIPTOR IS NOT NULL THEN IDX.DESCRIPTOR.getKeyColumnPosition(COLS.COLUMNNUMBER) ELSE 0 END) > 0 AND (?<>0 or not COLS.COLUMNDATATYPE.isNullable() )] schema=SYS

[info 2013/12/15 23:06:02.336 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_scope,column_name,data_type,type_name,column_size,buffer_length,decimal_digits,pseudo_column__SYS.SYSCONGLOMERATES,SYS.SYSSCHEMAS/-1370252503

[info 2013/12/15 23:06:02.400 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_t/-823155316] for statement [SELECT JDBC_SUBQUERY.PROCEDURE_CAT AS PROCEDURE_CAT, JDBC_SUBQUERY.PROCEDURE_SCHEM AS PROCEDURE_SCHEM, JDBC_SUBQUERY.PROCEDURE_NAME AS PROCEDURE_NAME, JDBC_SUBQUERY.COLUMN_NAME AS COLUMN_NAME, JDBC_SUBQUERY.COLUMN_TYPE AS COLUMN_TYPE, CAST (JDBC_SUBQUERY.DATA_TYPE AS SMALLINT) AS DATA_TYPE, JDBC_SUBQUERY.TYPE_NAME AS TYPE_NAME, JDBC_SUBQUERY.COLUMN_SIZE AS COLUMN_SIZE, JDBC_SUBQUERY.BUFFER_LENGTH AS BUFFER_LENGTH, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE)) THEN CAST (NULL AS SMALLINT) ELSE JDBC_SUBQUERY.DECIMAL_DIGITS END AS DECIMAL_DIGITS, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN CAST (2 AS SMALLINT) ELSE JDBC_SUBQUERY.NUM_PREC_RADIX END AS NUM_PREC_RADIX, JDBC_SUBQUERY.NULLABLE AS NULLABLE, JDBC_SUBQUERY.REMARKS AS REMARKS, CAST (NULL AS VARCHAR(254)) AS COLUMN_DEF, CAST ((CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN 9 ELSE JDBC_SUBQUERY.DATA_TYPE END) AS SMALLINT) AS SQL_DATA_TYPE, CAST ((CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::DATE) THEN 1 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIME) THEN 2 ELSE (CASE WHEN (JDBC_SUBQUERY.DATA_TYPE = java.sql.Types::TIMESTAMP) THEN 3 ELSE CAST (NULL AS SMALLINT) END ) END ) END) AS SMALLINT) AS SQL_DATETIME_SUB, CASE WHEN (JDBC_SUBQUERY.DATA_TYPE IN (java.sql.Types::CHAR, java.sql.Types::VARCHAR, java.sql.Types::BINARY, java.sql.Types::VARBINARY)) THEN JDBC_SUBQUERY.BUFFER_LENGTH ELSE CAST (NULL AS INT) END AS CHAR_OCTET_LENGTH, CAST ((JDBC_SUBQUERY.PARAMETER_ID + 1) AS INT) AS ORDINAL_POSITION, CAST ((CASE WHEN (JDBC_SUBQUERY.NULLABLE IN (java.sql.DatabaseMetaData::procedureNullable)) THEN 'YES' ELSE 'NO' END) AS VARCHAR(128)) AS IS_NULLABLE, JDBC_SUBQUERY.METHOD_ID AS METHOD_ID, JDBC_SUBQUERY.PARAMETER_ID AS PARAMETER_ID FROM ( SELECT CAST (NULL AS VARCHAR(128)) AS PROCEDURE_CAT, SCHEMANAME AS PROCEDURE_SCHEM, A.ALIAS AS PROCEDURE_NAME, V."COLUMN_NAME" AS COLUMN_NAME, V."COLUMN_TYPE" AS COLUMN_TYPE, V."DATA_TYPE" AS DATA_TYPE, V."TYPE_NAME" AS TYPE_NAME, V."PRECISION" AS COLUMN_SIZE, V."LENGTH" AS BUFFER_LENGTH, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."SCALE" ELSE CAST (NULL AS SMALLINT) END AS DECIMAL_DIGITS, CASE WHEN (V."DATA_TYPE" IN (java.sql.Types::DECIMAL, java.sql.Types::NUMERIC, java.sql.Types::INTEGER, java.sql.Types::SMALLINT, java.sql.Types::TINYINT, java.sql.Types::BIGINT, java.sql.Types::DOUBLE, java.sql.Types::FLOAT, java.sql.Types::REAL, java.sql.Types::DATE, java.sql.Types::TIME, java.sql.Types::TIMESTAMP)) THEN V."RADIX" ELSE CAST (NULL AS SMALLINT) END AS NUM_PREC_RADIX, V."NULLABLE" AS NULLABLE, V."REMARKS" AS REMARKS, V."METHOD_ID" AS METHOD_ID, V."PARAMETER_ID" AS PARAMETER_ID FROM SYS.SYSALIASES A, SYS.SYSSCHEMAS, NEW com.vmware.sqlfire.internal.catalog.GetProcedureColumns(A.ALIASINFO, A.ALIASTYPE) V WHERE ALIASTYPE = 'P' AND SCHEMANAME LIKE ? AND A.SCHEMAID = SYS.SYSSCHEMAS.SCHEMAID AND A.ALIAS LIKE ? AND V."COLUMN_NAME" LIKE ? ) JDBC_SUBQUERY ORDER BY PROCEDURE_SCHEM, PROCEDURE_NAME, METHOD_ID, PARAMETER_ID] schema=SYS

[info 2013/12/15 23:06:02.400 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_procedure_cat,procedure_schem,procedure_name,column_name,column_type,data_type,type_name,column_size,buffer_length,decimal_digits,num_prec_radix,nullable,remarks,column_def,sql_data_t/-823155316

[info 2013/12/15 23:06:02.417 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLUDTS(?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.451 EST SQLF:statementAlias: <main> tid=0x1] created statement descriptor [select_1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,/-85117902] for statement [SELECT	M->allProceduresAreCallable(),	M->allTablesAreSelectable(),	M->nullsAreSortedHigh(),	M->nullsAreSortedLow(),	M->nullsAreSortedAtStart(),	M->nullsAreSortedAtEnd(),	M->usesLocalFiles(),	M->usesLocalFilePerTable(),	M->storesUpperCaseIdentifiers(),	M->storesLowerCaseIdentifiers(),	M->storesMixedCaseIdentifiers(),	M->storesUpperCaseQuotedIdentifiers(),	M->storesLowerCaseQuotedIdentifiers(),	M->storesMixedCaseQuotedIdentifiers(),	M->getSQLKeywords(),	M->getNumericFunctions(),	M->getStringFunctions(),	M->getSystemFunctions(),	M->getTimeDateFunctions(),	M->getSearchStringEscape(),	M->getExtraNameCharacters(),	M->supportsAlterTableWithAddColumn(),	M->supportsAlterTableWithDropColumn(),	M->supportsConvert(),	'1', M->supportsDifferentTableCorrelationNames(),	M->supportsExpressionsInOrderBy(),	M->supportsOrderByUnrelated(),	M->supportsGroupBy(),	M->supportsGroupByUnrelated(),		M->supportsGroupByBeyondSelect(),	M->supportsMultipleResultSets(),	M->supportsMultipleTransactions(),	M->supportsCoreSQLGrammar(),	M->supportsExtendedSQLGrammar(),	M->supportsANSI92IntermediateSQL(),	M->supportsANSI92FullSQL(),	M->supportsIntegrityEnhancementFacility(),	M->supportsOuterJoins(),	M->supportsFullOuterJoins(),	M->supportsLimitedOuterJoins(),	M->getSchemaTerm(),	M->getProcedureTerm(),	M->getCatalogTerm(),	M->isCatalogAtStart(),	M->getCatalogSeparator(),	M->supportsSchemasInDataManipulation(),	M->supportsSchemasInProcedureCalls(),	M->supportsSchemasInTableDefinitions(),	M->supportsSchemasInIndexDefinitions(),	M->supportsSchemasInPrivilegeDefinitions(),	M->supportsCatalogsInDataManipulation(),	M->supportsCatalogsInProcedureCalls(),	M->supportsCatalogsInTableDefinitions(),	M->supportsCatalogsInIndexDefinitions(),	M->supportsCatalogsInPrivilegeDefinitions(),	M->supportsPositionedDelete(),	M->supportsPositionedUpdate(),	M->supportsSelectForUpdate(),	M->supportsStoredProcedures(),	M->supportsSubqueriesInComparisons(),	M->supportsUnion(),	M->supportsUnionAll(),	M->supportsOpenCursorsAcrossCommit(),	M->supportsOpenCursorsAcrossRollback(),	M->supportsOpenStatementsAcrossCommit(),	M->supportsOpenStatementsAcrossRollback(),	M->getMaxBinaryLiteralLength(),	M->getMaxCharLiteralLength(),	M->getMaxColumnNameLength(),	M->getMaxColumnsInGroupBy(),	M->getMaxColumnsInIndex(),	M->getMaxColumnsInOrderBy(),	M->getMaxColumnsInSelect(),	M->getMaxColumnsInTable(),	M->getMaxConnections(),	M->getMaxCursorNameLength(),	M->getMaxIndexLength(),	M->getMaxSchemaNameLength(),	M->getMaxProcedureNameLength(),	M->getMaxCatalogNameLength(),	M->getMaxRowSize(),	M->doesMaxRowSizeIncludeBlobs(),	M->getMaxStatementLength(),	M->getMaxStatements(),	M->getMaxTableNameLength(),	M->getMaxTablesInSelect(),	M->getMaxUserNameLength(),	M->getDefaultTransactionIsolation(),	M->supportsTransactions(),	'1,2,4,8' ,	M->supportsDataDefinitionAndDataManipulationTransactions(),	M->supportsDataManipulationTransactionsOnly(),	M->dataDefinitionCausesTransactionCommit(),	M->dataDefinitionIgnoredInTransactions(), 	(cast (RTRIM(CAST(java.sql.ResultSet::TYPE_FORWARD_ONLY as CHAR(10))) AS VARCHAR(10)) || (',') || (cast (RTRIM(CAST(java.sql.ResultSet::TYPE_SCROLL_INSENSITIVE AS CHAR(10))) as VARCHAR(10)))), '1003,1007,1008;1004,1007,1008;1005', '','','','1003','1003','1003','','','',M->supportsBatchUpdates()from (values(getCurrentConnection()->getMetaData())) as DBMetaData(M)] schema=SYSIBM

[info 2013/12/15 23:06:02.451 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=select_1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,/-85117902

[info 2013/12/15 23:06:02.473 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLSTATISTICS(?,_?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.477 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLCOLUMNS(?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.481 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETCATALOGS=1')

[info 2013/12/15 23:06:02.484 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPROCEDURES(?,_?,_?,_?)

[info 2013/12/15 23:06:02.488 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES(?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.492 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLCOLPRIVILEGES(?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.496 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETSCHEMAS=1')

[info 2013/12/15 23:06:02.499 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLFOREIGNKEYS(?,_?,_?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.503 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPROCEDURECOLS(?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.507 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLSPECIALCOLUMNS(?,_?,_?,_?,_?,_?,_?)

[info 2013/12/15 23:06:02.512 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLES('',_'',_'',_'',_'GETTABLETYPES=1')

[info 2013/12/15 23:06:02.514 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLGETTYPEINFO(?,_?)

[info 2013/12/15 23:06:02.518 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLTABLEPRIVILEGES(?,_?,_?,_?)

[info 2013/12/15 23:06:02.521 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CALL_SYSIBM.SQLPRIMARYKEYS(?,_?,_?,_?)

[info 2013/12/15 23:06:02.528 EST  <main> tid=0x1] FabricDatabase: initial replay remaining iters 3 with remaining queue size 15

[info 2013/12/15 23:06:02.528 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=1, value={DDLConflatable [1] SQLText [CREATE TABLE  orders  (    ACTReportInfo2 varchar(13),    AESInstanceID int,    AESMVDSequenceStatus int,    AESOMInstanceID int,    AESOMOrderID int,    AESOMParentOrderID varchar(20),    AESOMRoutingDest varchar(21),    AESOrderGeneratorID varchar(12),    AESOrderInternalState varchar(3),    AESPauseCode int,    AESRoutingRestrictions int,    Account varchar(14),    AccountType varchar(6),    AccruedInterest NUMERIC(19,8),    AdditionalFee NUMERIC(19,8),    AdjustTktPrice int,    AllOrNone int,    AllocQuantity NUMERIC(19,2),    Anonymous int,    ArrivalPrice NUMERIC(19,8),    AsOfTimestamp timestamp,    AutoAllocate int,    AutoBookExternalAccount varchar(14),    AutoBookInternalAccount varchar(14),    AutoConfirmation int,    AutoTrade varchar(2),    AverageFXRate NUMERIC(19,8),    AveragePrice NUMERIC(19,8),    AvgFXForwardPoints NUMERIC(19,2),    BackCancelCorrect varchar(1),    BackOfficeOrderID int,    BackOfficeSystem varchar(8),    BackOfficeTactic varchar(9),    BargainTermCode varchar(1),    BaseCurrency varchar(4),    BasketLegID varchar(21),    BasketType varchar(9),    BlockTradeBrokerKey varchar(20),    BlockTradeReportCode int,    BookingEntity varchar(10),    BookingSecurityID varchar(27),    BookingSecurityIDSource varchar(9),    BranchSeqNumber varchar(25),    BulletinBoardSize int,    CancelState varchar(7),    ChangedTimestamp timestamp,    CheckedCashValue NUMERIC(19,8),    CheckedClientAccount varchar(15),    CheckedGroupID varchar(15),    CheckedNetSell NUMERIC(19,8),    ClearingInstructions varchar(9),    ClientID varchar(14),    ClientLocation varchar(5),    ClientOrderID varchar(40),    ClientPortfolioID varchar(11),    ClientSecurityID varchar(26),    ClientSecurityIDSource varchar(9),    Commission varchar(24),    CommissionType varchar(1),    CompressParameter int,    CompressTimeout int,    ConnectionID varchar(20),    ControllingUser varchar(14),    Coupon NUMERIC(19,8),    CrossInstructions int,    CrossInternalPrice NUMERIC(19,8),    CumulativeQuantity NUMERIC(19,2),    CurrentMarker int,    CustomerAccount varchar(14),    DayCumulativeQuantity NUMERIC(19,2),    DefaultDestination varchar(27),    DeliveryType varchar(9),    DestinationAccountType varchar(6),    DestinationDesk varchar(10),    DestinationRegionCode varchar(5),    DestinationServiceMessage varchar(75),    DestinationServiceName varchar(15),    DestinationServiceOrderID varchar(25),    DestinationServiceSeqNum int,    DestinationUser varchar(14),    DestinationUserCC varchar(14),    Discretion int,    DividendAdjustment varchar(3),    ExTriggerActivationStatus int,    Exchange varchar(13),    ExchangeRate NUMERIC(19,8),    ExchangeTag varchar(20),    ExchangeTradeDate timestamp,    ExecutionAlgo varchar(49),    ExecutionCapacity varchar(16),    ExecutionMode varchar(9),    ExecutionPrice NUMERIC(19,8),    ExecutionTrigger varchar(75),    ExternalClientOrderID varchar(36),    FIXSessionID varchar(60),    FOBOOrderTradeID varchar(25),    FXAveragePriceAllIn NUMERIC(19,8),    FXCcy2 int,    FXCumulativeQuantityBaseCcy NUMERIC(19,2),    FXCumulativeQuantityLocalCcy NUMERIC(19,2),    FXFwSwFarLegSettlement varchar(10),    FXFwSwNearLegSettlement varchar(10),    FXFwSwQuoteID varchar(50),    FXFwdBookingStatus int,    FXFwdInstructions int,    FXLocalCcyRate NUMERIC(19,8),    FXQuantityLocalCcy NUMERIC(19,2),    FXRate NUMERIC(19,8),    GiveUp varchar(9),    IOI int,    InstanceID varchar(1),    IntermarketSweep varchar(1),    InternalCrossEligible varchar(1),    InternalIOI int,    InternalIOIPrice NUMERIC(19,8),    InternalIOIQuantity int,    InvestorID varchar(36),    JitneyBrokerCode varchar(3),    LastUser varchar(14),    LatestFXForwardPoints NUMERIC(19,8),    LeavesQuantity NUMERIC(19,2),    LocalTaxes NUMERIC(19,8),    LocateBrokerID varchar(27),    LocateProvided varchar(3),    LocatedShares NUMERIC(19,2),    MLID varchar(16),    MLLegNumber int,    MLParentID varchar(16),    MLParentLegNumber int,    MLParentTotalLegs int,    MLTotalLegs int,    MarketHeld int,    MarkupPrice NUMERIC(19,8),    MaturityDate varchar(10),    MaxShow NUMERIC(19,2),    Memo varchar(75),    MifidRouting varchar(2),    MifidShowLmt int,    MifidTktQuantity int,    MinAcceptableQuantity NUMERIC(19,2),    MinCommission NUMERIC(19,8),    NYSERule92Terms varchar(24),    NothingDoneFlag int,    OpenCloseIndicator varchar(8),    OrderBookingState varchar(7),    OrderEntryType varchar(1),    OrderID varchar(16) NOT NULL,    OrderOriginatorRegionCode varchar(5),    OrderReceiptTimestamp timestamp,    OrderTimestamp timestamp,    PAdjustTktPrice int,    PClientOrderID varchar(40),    PExecutionAlgo varchar(49),    PExecutionMode varchar(9),    PExecutionTrigger varchar(75),    PExternalClientOrderID varchar(36),    PFXQuantityLocalCcy NUMERIC(19,2),    PMarketHeld int,    PMaxShow NUMERIC(19,2),    PMemo varchar(75),    PPriceInstruction varchar(32),    PQuantity NUMERIC(19,2),    PQuoteSize NUMERIC(19,8),    PSSExemptCode int,    PSide varchar(4),    PTMLevy NUMERIC(19,8),    PTimeInForce varchar(14),    PairsMaxLegQuantity NUMERIC(19,2),    Bid NUMERIC(19,8),    Ask NUMERIC(19,8),    PairsStopLossAmount NUMERIC(19,8),    ParentOrderID varchar(16),    Precision int,    PriceInstruction varchar(32),    PrimaryExchange varchar(14),    PutOrCall varchar(4),    Quantity NUMERIC(19,2),    QueryID int,    QuoteSize NUMERIC(19,8),    Reconciled int,    RecycleDate date,    ReferenceGroupID int,    ReferenceOrderID int,    RegNMSExemptCode varchar(2),    RegNMSOptOutISO varchar(1),    RejectedShares NUMERIC(19,2),    RepNumber varchar(14),    Rollup int,    RootOrderID varchar(16),    RouteFlag int,    RouteText varchar(12),    RouteType int,    RuleType varchar(20),    SSExemptCode int,    SalesCredit varchar(14),    SalesCreditAccount varchar(14),    ScheduleCode varchar(5),    SecurityID varchar(27),    SecurityIDAsEntered varchar(26),    SecurityIDSource varchar(9),    SecurityRootID varchar(8),    SecurityRootIDSource varchar(9),    SecuritySubtype varchar(14),    SecurityType varchar(14),    ServerID varchar(2),    SettlementCurrency varchar(4),    SettlementCurrencyPrice NUMERIC(19,8),    SettlementInstruction varchar(15),    Side varchar(4),    SoftCommission varchar(14),    Solicitation int,    SourceDesk varchar(10),    SourceRegionCode varchar(5),    SourceServiceName varchar(14),    SourceServiceOrderID varchar(20),    SourceServiceUser varchar(14),    SourceUser varchar(14),    SourceUserCC varchar(14),    StampTax NUMERIC(19,8),    State varchar(7),    StlCurAveragePrice NUMERIC(19,8),    StopPrice NUMERIC(19,8),    StoppedTime timestamp,    StrategyAccount varchar(29),    StrategyCrossAccount varchar(29),    StrikePrice NUMERIC(19,8),    SwitchAccount varchar(14),    TSXBypass varchar(1),    TSXRegID varchar(2),    Tactic varchar(9),    TaxType varchar(24),    TimeInForce varchar(14),    TopTrade int,    Tranche varchar(9),    TransactionName varchar(4),    TransactionNumber int,    TransactionTimeStamp timestamp,    UnderlyingSecurityID varchar(9),    UniqueClientOrderID varchar(30),    WSSAreaCode varchar(14),    WaveID varchar(16),    WaveMark varchar(1),    WghtedSumAverageFXRate NUMERIC(19,8),    WghtedSumAveragePrice NUMERIC(19,8),    WghtedSumStlCurAveragePrice NUMERIC(19,8),    Risk varchar(8),    Rank int,    AdvisoryBroker varchar(11),    GlobalReferenceGroupID varchar(21),    OrderTypeTag varchar(3),    ExternalClientBookingTag varchar(19),    OriginalLCDTag int,    UnsolicitedOut varchar(1),    PRIMARY KEY (OrderID) ) ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=null;isCreateTable=true;isDropStatement=false;isAlterTable=false;flags=0x89;additionalFlags=0x0;skipLocalPeek=1} [sequence: 1]}

[info 2013/12/15 23:06:02.557 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.ORDERS] with table-default-partitioned=false

[info 2013/12/15 23:06:04.633 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_TABLE_orders_(_ACTReportInfo2_varchar(13),_AESInstanceID_int,_AESMVDSequenceStatus_int,_AESOMInstanceID_int,_AESOMOrderID_int,_AESOMParentOrderID_varchar(20),_AESOMRoutingDest_varchar(21),_AESOrderGeneratorID_varchar(

[info 2013/12/15 23:06:04.645 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 2: created conglomerate with id 76: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true]

[info 2013/12/15 23:06:04.719 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 77 name = 2__ORDERS__ORDERID uuid = 6a6b410a-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 77) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.730 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."ORDERS" with UUID: 42adc10b-0142-f993-c923-000005fe99d8

[info 2013/12/15 23:06:04.735 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=1

[info 2013/12/15 23:06:04.735 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=2, value={DDLConflatable [2] SQLText [CREATE TABLE  FillDetails  (    ACTReport varchar(7),    AsOfTimestamp timestamp,    BookStreetSide varchar(14),    BookingEntity varchar(10),    BookingOriginalFillID varchar(16),    ClearingBroker varchar(10),    Compressed int,    CompressedFillID int,    ContraBroker varchar(15),    CounterpartyID varchar(12),    CrossTradingAccount varchar(6),    Exchange varchar(13),    ExchangeTag varchar(20),    ExchangeTradeDate timestamp,    ExecutingBroker varchar(15),    ExecutionCapacity varchar(16),    ExecutionDesk varchar(8),    ExecutionExchangeID varchar(30),    ExecutionExchangeTimestamp timestamp,    ExecutionID varchar(16) NOT NULL,    ExecutionOriginUser varchar(14),    ExecutionPrice NUMERIC(19,8),    ExecQuantity NUMERIC(19,2),    FXRate NUMERIC(19,8),    FillTimestamp timestamp,    InstanceID varchar(1),    LateFill varchar(1),    LateFlag varchar(15),    LiquidityIndicator varchar(3),    MarkupPrice NUMERIC(19,8),    NBBOAsk NUMERIC(19,8),    NBBOBid NUMERIC(19,8),    OATSReport varchar(14),    OrderOriginatorRegionCode varchar(5),    OriginalExecutionID varchar(36),    PTMLevy NUMERIC(19,8),    RecycleDate date,    RegNMSExemptCode varchar(2),    RootFillID varchar(16),    SSExemptCode int,    SecurityID varchar(27),    ServerID varchar(2),    SettlementCurrencyPrice NUMERIC(19,8),    Side varchar(4),    StampTax NUMERIC(19,8),    TagType int,    PRIMARY KEY (ExecutionID) ) ] fullTableName=APP.FILLDETAILS;defaultSchema=APP;objectName=null;isCreateTable=true;isDropStatement=false;isAlterTable=false;flags=0x89;additionalFlags=0x0;skipLocalPeek=1} [sequence: 2]}

[info 2013/12/15 23:06:04.737 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.FILLDETAILS] with table-default-partitioned=false

[info 2013/12/15 23:06:04.746 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_TABLE_FillDetails_(_ACTReport_varchar(7),_AsOfTimestamp_timestamp,_BookStreetSide_varchar(14),_BookingEntity_varchar(10),_BookingOriginalFillID_varchar(16),_ClearingBroker_varchar(10),_Compressed_int,_CompressedFillID

[info 2013/12/15 23:06:04.747 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 2: created conglomerate with id 78: [table: APP.FILLDETAILS, id: Container(0, 78), isApplicationTable=true]

[info 2013/12/15 23:06:04.755 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 79 name = 2__FILLDETAILS__EXECUTIONID uuid = a4420111-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 79) on base container: [table: APP.FILLDETAILS, id: Container(0, 78), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.758 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."FILLDETAILS" with UUID: 2c864112-0142-f993-c923-000005fe99d8

[info 2013/12/15 23:06:04.759 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=2

[info 2013/12/15 23:06:04.760 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=3, value={DDLConflatable [3] SQLText [CREATE TABLE  FillAllocations  (    ACTReportInfo1 varchar(50),    AllocQuantity NUMERIC(19,2),    AutoBustAllocation int,    BackCancelCorrect varchar(1),    BackOfficeFillID int,    BookingTag int,    BrokerFee NUMERIC(19,8),    ChangedTimestamp timestamp,    CumulativeQuantity NUMERIC(19,2),    CustomerAccount varchar(14),    DestinationRegionCode varchar(5),    DestinationServiceName varchar(15),    DestinationServiceSeqNum int,    DestinationUserCC varchar(14),    ExecutionID varchar(16),    ExecutionUser varchar(14),    FOBOFillTradeID varchar(25),    FXForwardPoints NUMERIC(19,8),    FillBookingState varchar(7),    FillID varchar(16) NOT NULL,    FillState varchar(6),    GiveUp varchar(9),    InstanceID varchar(1),    OrderID varchar(16),    ParentFillID varchar(16),    ParentFillOrderID varchar(16),    Reason int,    ReasonCode varchar(4),    SalesCreditAccount varchar(14),    SourceRegionCode varchar(5),    SourceServiceName varchar(14),    SourceUserCC varchar(14),    TransactionName varchar(4),    TransactionNumber int,    TransactionTimeStamp timestamp,    UnAllocQuantity NUMERIC(19,2),    UniqueClientFillID varchar(30),    PRIMARY KEY (FillID) ) ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=null;isCreateTable=true;isDropStatement=false;isAlterTable=false;flags=0x89;additionalFlags=0x0;skipLocalPeek=1} [sequence: 3]}

[info 2013/12/15 23:06:04.761 EST SQLF:TraceConglom <main> tid=0x1] Using the JVM as an SQLFire datastore for table [APP.FILLALLOCATIONS] with table-default-partitioned=false

[info 2013/12/15 23:06:04.767 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_TABLE_FillAllocations_(_ACTReportInfo1_varchar(50),_AllocQuantity_NUMERIC(19,2),_AutoBustAllocation_int,_BackCancelCorrect_varchar(1),_BackOfficeFillID_int,_BookingTag_int,_BrokerFee_NUMERIC(19,8),_ChangedTimestamp_ti

[info 2013/12/15 23:06:04.768 EST SQLF:TraceConglom <main> tid=0x1] GemFireTransaction TX 2: created conglomerate with id 80: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true]

[info 2013/12/15 23:06:04.774 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 81 name = 2__FILLALLOCATIONS__FILLID uuid = de250118-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.Hash1Index: Container(0, 81) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.777 EST SQLF:TraceConglom <main> tid=0x1] Created table "APP"."FILLALLOCATIONS" with UUID: 266b0119-0142-f993-c923-000005fe99d8

[info 2013/12/15 23:06:04.778 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=3

[info 2013/12/15 23:06:04.778 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=4, value={DDLConflatable [4] SQLText [CREATE INDEX INSTT ON  orders  (   InstanceID,   TransactionNumber ) ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=INSTT;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 4]}

[info 2013/12/15 23:06:04.785 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_INSTT_ON_orders_(_InstanceID,_TransactionNumber_)_

[info 2013/12/15 23:06:04.798 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: INSTT

[info 2013/12/15 23:06:04.798 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 82 name = INSTT uuid = 8814411f-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 82) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.804 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=4

[info 2013/12/15 23:06:04.804 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=5, value={DDLConflatable [5] SQLText [CREATE INDEX PORD ON  orders  (ParentOrderID)  ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=PORD;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 5]}

[info 2013/12/15 23:06:04.805 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_PORD_ON_orders_(ParentOrderID)_

[info 2013/12/15 23:06:04.825 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: PORD

[info 2013/12/15 23:06:04.825 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 83 name = PORD uuid = a8a40121-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 83) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.830 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=5

[info 2013/12/15 23:06:04.830 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=6, value={DDLConflatable [6] SQLText [CREATE INDEX DTDSK ON  orders  (DestinationDesk)  ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=DTDSK;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 6]}

[info 2013/12/15 23:06:04.831 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_DTDSK_ON_orders_(DestinationDesk)_

[info 2013/12/15 23:06:04.840 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: DTDSK

[info 2013/12/15 23:06:04.840 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 84 name = DTDSK uuid = c934c123-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 84) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.845 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=6

[info 2013/12/15 23:06:04.845 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=7, value={DDLConflatable [7] SQLText [CREATE INDEX SCDSK ON  orders  (SourceDesk)  ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=SCDSK;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 7]}

[info 2013/12/15 23:06:04.845 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_SCDSK_ON_orders_(SourceDesk)_

[info 2013/12/15 23:06:04.855 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: SCDSK

[info 2013/12/15 23:06:04.855 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 85 name = SCDSK uuid = 69c68125-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 85) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.859 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=7

[info 2013/12/15 23:06:04.859 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=8, value={DDLConflatable [8] SQLText [CREATE INDEX ORDT ON  orders  (   OrderID,   TransactionNumber ) ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=ORDT;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 8]}

[info 2013/12/15 23:06:04.860 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_ORDT_ON_orders_(_OrderID,_TransactionNumber_)_

[info 2013/12/15 23:06:04.869 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ORDT

[info 2013/12/15 23:06:04.869 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 86 name = ORDT uuid = 0a594127-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 86) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.873 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=8

[info 2013/12/15 23:06:04.873 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=9, value={DDLConflatable [9] SQLText [CREATE INDEX RORD ON  orders  (RootOrderID)  ] fullTableName=APP.ORDERS;defaultSchema=APP;objectName=RORD;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 9]}

[info 2013/12/15 23:06:04.874 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_RORD_ON_orders_(RootOrderID)_

[info 2013/12/15 23:06:04.883 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: RORD

[info 2013/12/15 23:06:04.883 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 87 name = RORD uuid = 2aed0129-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 87) on base container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.887 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=9

[info 2013/12/15 23:06:04.887 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=10, value={DDLConflatable [10] SQLText [CREATE INDEX INST ON  FillDetails (InstanceID)  ] fullTableName=APP.FILLDETAILS;defaultSchema=APP;objectName=INST;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 10]}

[info 2013/12/15 23:06:04.889 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_INST_ON_FillDetails_(InstanceID)_

[info 2013/12/15 23:06:04.891 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: INST

[info 2013/12/15 23:06:04.891 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 88 name = INST uuid = 4b81c12b-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 88) on base container: [table: APP.FILLDETAILS, id: Container(0, 78), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.892 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=10

[info 2013/12/15 23:06:04.892 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=11, value={DDLConflatable [11] SQLText [CREATE INDEX PFID ON  FillAllocations (ParentFillID)  ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=PFID;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 11]}

[info 2013/12/15 23:06:04.893 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_PFID_ON_FillAllocations_(ParentFillID)_

[info 2013/12/15 23:06:04.896 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: PFID

[info 2013/12/15 23:06:04.896 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 89 name = PFID uuid = ec17812d-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 89) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.896 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=11

[info 2013/12/15 23:06:04.897 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=12, value={DDLConflatable [12] SQLText [CREATE INDEX FIDT ON  FillAllocations  (   FillID,   TransactionNumber ) ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=FIDT;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 12]}

[info 2013/12/15 23:06:04.897 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_FIDT_ON_FillAllocations_(_FillID,_TransactionNumber_)_

[info 2013/12/15 23:06:04.899 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: FIDT

[info 2013/12/15 23:06:04.899 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 90 name = FIDT uuid = 8cae412f-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 90) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.900 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=12

[info 2013/12/15 23:06:04.900 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=13, value={DDLConflatable [13] SQLText [CREATE INDEX ORD ON  FillAllocations (OrderID)  ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=ORD;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 13]}

[info 2013/12/15 23:06:04.901 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_ORD_ON_FillAllocations_(OrderID)_

[info 2013/12/15 23:06:04.903 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ORD

[info 2013/12/15 23:06:04.903 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 91 name = ORD uuid = ad460131-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 91) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.904 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=13

[info 2013/12/15 23:06:04.904 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=14, value={DDLConflatable [14] SQLText [CREATE INDEX EXIDX ON  FillAllocations (ExecutionID)  ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=EXIDX;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 14]}

[info 2013/12/15 23:06:04.905 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_EXIDX_ON_FillAllocations_(ExecutionID)_

[info 2013/12/15 23:06:04.907 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: EXIDX

[info 2013/12/15 23:06:04.907 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 92 name = EXIDX uuid = cddec133-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 92) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.908 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=14

[info 2013/12/15 23:06:04.908 EST  <main> tid=0x1] FabricDatabase: starting initial replay for entry: {QueueValue: key=15, value={DDLConflatable [15] SQLText [CREATE INDEX ITNUM ON  FillAllocations  (   InstanceID,   TransactionNumber ) ] fullTableName=APP.FILLALLOCATIONS;defaultSchema=APP;objectName=ITNUM;isCreateTable=false;isDropStatement=false;isAlterTable=false;flags=0xc1;additionalFlags=0x0;skipLocalPeek=1} [sequence: 15]}

[info 2013/12/15 23:06:04.909 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=CREATE_INDEX_ITNUM_ON_FillAllocations_(_InstanceID,_TransactionNumber_)_

[info 2013/12/15 23:06:04.911 EST SQLF:TraceConglom <main> tid=0x1] CreateIndex: loaded 0 rows in index: ITNUM

[info 2013/12/15 23:06:04.911 EST SQLF:TraceConglom <main> tid=0x1] Created index with descriptor: ConglomerateDescriptor: conglomerateNumber = 93 name = ITNUM uuid = 6e788135-0142-f993-c923-000005fe99d8 heap = com.vmware.sqlfire.internal.engine.access.index.SortedMap2Index: Container(0, 93) on base container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true] caseSensitive = true indexable = true

[info 2013/12/15 23:06:04.912 EST  <main> tid=0x1] FabricDatabase: successfully replayed entry having sequenceId=15

[info 2013/12/15 23:06:04.912 EST  <main> tid=0x1] FabricDatabase: for APP.ORDERS start initializing container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true]

[info 2013/12/15 23:06:04.912 EST  <main> tid=0x1] Initializing region ORDERS

[info 2013/12/15 23:06:04.913 EST  <main> tid=0x1] FabricDatabase: end initializing container: [table: APP.ORDERS, id: Container(0, 76), isApplicationTable=true]

[info 2013/12/15 23:06:04.913 EST  <main> tid=0x1] FabricDatabase: for APP.FILLDETAILS start initializing container: [table: APP.FILLDETAILS, id: Container(0, 78), isApplicationTable=true]

[info 2013/12/15 23:06:04.913 EST  <main> tid=0x1] Initializing region FILLDETAILS

[info 2013/12/15 23:06:04.914 EST  <main> tid=0x1] FabricDatabase: end initializing container: [table: APP.FILLDETAILS, id: Container(0, 78), isApplicationTable=true]

[info 2013/12/15 23:06:04.914 EST  <main> tid=0x1] FabricDatabase: for APP.FILLALLOCATIONS start initializing container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true]

[info 2013/12/15 23:06:04.914 EST  <main> tid=0x1] Initializing region FILLALLOCATIONS

[info 2013/12/15 23:06:04.914 EST  <main> tid=0x1] FabricDatabase: end initializing container: [table: APP.FILLALLOCATIONS, id: Container(0, 80), isApplicationTable=true]

[info 2013/12/15 23:06:04.986 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=create_index_SYSSTAT.idx_rs_dist_rs_id_on_SYSXPLAIN_RESULTSETS(dist_rs_id)

[info 2013/12/15 23:06:05.043 EST SQLF:statementAlias: <main> tid=0x1] creating statistics with stmtDesc=create_index_SYSSTAT.idx_dist_dist_rs_id_on_SYSXPLAIN_DIST_PROPS(dist_rs_id)

[info 2013/12/15 23:06:05.050 EST  <main> tid=0x1] FabricDatabase: initial DDL replay completed.

[info 2013/12/15 23:06:05.050 EST  <main> tid=0x1] FabricDatabase: Authentication recheck successful.

[info 2013/12/15 23:06:05.052 EST SQLF:TraceFabricServiceBoot <main> tid=0x1] Starting a new network server on: pivhdsne/172.16.48.166[1528]
Could not connect to SQLFire Network Server on host 172.16.48.166, port 1528: Connection refused
VMware vFabric SQLFire Network Server - 10.4.2.0 - (42624) started and ready to accept connections on port 1528 at 2013/12/15 23:06:05.111 EST 

[warning 2013/12/15 23:13:23.584 EST SQLF:SignalHandler <SIGTERM handler> tid=0x3f] received explicit OS signal SIGTERM
java.lang.Throwable
	at com.vmware.sqlfire.internal.engine.SigThreadDumpHandler.handle(SigThreadDumpHandler.java:71)
	at sun.misc.Signal$1.run(Signal.java:195)
	at java.lang.Thread.run(Thread.java:662)


[info 2013/12/15 23:13:23.584 EST  <Distributed system shutdown hook> tid=0x8] VM is exiting - shutting down distributed system

[info 2013/12/15 23:13:23.593 EST  <Distributed system shutdown hook> tid=0x8] GemFireCache[id = 1727788317; isClosing = true; isShutDownAll = false; closingGatewayHubsByShutdownAll = false; created = Sun Dec 15 23:05:57 EST 2013; server = false; copyOnRead = false; lockLease = 120; lockTimeout = 60]: Now closing.

[info 2013/12/15 23:13:23.593 EST  <Distributed system shutdown hook> tid=0x8] Resetting original MemoryPoolMXBean heap threshold bytes 0 on pool PS Old Gen

[info 2013/12/15 23:13:23.611 EST  <Distributed system shutdown hook> tid=0x8] Unlocked disk store SQLF-DD-DISKSTORE

[info 2013/12/15 23:13:23.612 EST  <Distributed system shutdown hook> tid=0x8] Unlocked disk store SQLF-DEFAULT-DISKSTORE

[info 2013/12/15 23:13:23.614 EST  <Distributed system shutdown hook> tid=0x8] Shutting down DistributionManager pivhdsne(1135):27224. 

[info 2013/12/15 23:13:23.717 EST  <Distributed system shutdown hook> tid=0x8] Now closing distribution for pivhdsne(1135):27224

[config 2013/12/15 23:13:23.719 EST  <Distributed system shutdown hook> tid=0x8] Membership: sending new view [[pivhdsne(1135)<v0>:27224|1] []] (0 mbrs)
  

[config 2013/12/15 23:13:23.719 EST  <Distributed system shutdown hook> tid=0x8] 
     member pivhdsne(1135)<v0>:27224 has a weight of 15

[info 2013/12/15 23:13:23.724 EST  <Distributed system shutdown hook> tid=0x8] DistributionManager stopped in 110ms.

[info 2013/12/15 23:13:23.724 EST  <Distributed system shutdown hook> tid=0x8] Marking DistributionManager pivhdsne(1135):27224 as closed.
